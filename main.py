import os
import json
import csv
import re
import logging
import time
from datetime import datetime
from typing import Any, Dict, Tuple, Set
import serial
import requests
from label_convert import process_zpl
from modbusclient import write_modbus_register
import threading
from queue import Queue

class ExcludeDynamicWorkOrderLogFilter(logging.Filter):
    """
    Esse filtro exclui logs que contenham informações dinâmicas referentes a registros do WorkOrder.
    Se a mensagem contiver 'Registro' e 'WorkOrder:' (padrões fixos), ela será filtrada.
    """
    def filter(self, record):
        message = record.getMessage()
        if 'Registro' in message and 'WorkOrder:' in message:
            return False
        return True

# Configuração básica do logger
logger = logging.getLogger()
logger.setLevel(logging.INFO)
file_handler = logging.FileHandler("app.log", mode="a")
file_handler.addFilter(ExcludeDynamicWorkOrderLogFilter())
formatter = logging.Formatter('%(asctime)s - %(levelname)s - %(message)s')
file_handler.setFormatter(formatter)
logger.addHandler(file_handler)
console_handler = logging.StreamHandler()
console_handler.setLevel(logging.INFO)
console_handler.setFormatter(formatter)
logger.addHandler(console_handler)


def resource_path(relative_path: str) -> str:
    """
    Retorna o caminho absoluto para um recurso, seja ele executado como script
    ou a partir da aplicação congelada pelo PyInstaller.
    """
    import sys
    try:
        base_path = sys._MEIPASS
    except AttributeError:
        base_path = os.path.abspath(".")
    return os.path.join(base_path, relative_path)


def configure_session_with_retries():
    session = requests.Session()
    return session


class LabelManager:
    # Imagem padrão (ZPL) para pré-carga na impressora.
    STANDARD_IMAGE_ZPL = """~DG13006430,3286,31,\r\n00000000000000000000000000000000000000000000000000000000000000\r\n000000000007FFFF0000000000000000000000000000000000000000000000\r\n00000000007FFFFFF800000000000000000000000000000000000000000000\r\n0000000007FFFFFFFF00000000000000000000000000000000000000000000\r\n000000003FFFFFFFFFE0000000000000000000000000000000000000000000\r\n00000000FFFFFFFFFFFC000000000000000000000000000000000000000000\r\n00000003FFFFFFFFFFFF000000000000000000000000000000000000000000\r\n0000000FFFFFFFFFFFFFC00000000000000000000000000000000000000000\r\n0000003FFFFFFFFFFFFFE00000000000000000000000000000000000000000\r\n0000007FFFFE007FFFFFF80000000000000000000000000000000000000000\r\n000001FFFFC0007FFFFFFE0000000000000000000000000000000000000000\r\n000003FFFE00007FFFFFFF0000000000000000000000000000000000000000\r\n00000FFFF000007FFFFFFF8000000000000000000000000000000000000000\r\n00001FFFC000007FFFFFFFE000000000000000000000000000000000000000\r\n00003FFF0001FFFFFFFFFFF000000000000000000000000000000000000000\r\n00007FFE001FFFFFFFFFFFF800000000000000000000000000000000000000\r\n0000FFF800FFFFFFFFFFFFFC00000000000000000000000000000000000000\r\n0001FFE007FFFFFFFFFFFFFE00000000000000000000000000000000000000\r\n0003FFC01FFFFFFFFFFFFFFF00000000000000000000000000000FFFF00000\r\n0007FF807FFFFFFFFFFFFFFF8000000003FFFC00000000000001FFFFFF8000\r\n000FFF00FFFFFFFFFFFFFFFFC000000003FFFC0000000000000FFFFFFFF000\r\n001FFE03FFFFFFFFFFFFFFFFC000000003FFFC0000000000003FFFFFFFFC00\r\n001FFC07FFFFFFFFFFFFFFFFE000000003FFFC000000000000FFFFFFFFFF00\r\n003FF80FFFFFFFFFFFFFFFFFF000000003FFFC000000000003FFFFFFFFFFC0\r\n007FF01FFFFFFFFFFFFFFFFFF800000003FFFC000000000007FFFFFFFFFFE0\r\n00FFE03FFFFFFFFFFFFFFFFFF800000003FFFC00000000000FFFFFFFFFFFF0\r\n00FFC07FFFFFFFFFFFFFFFFFFC00000003FFFC00000000001FFFFFFFFFFFF8\r\n01FF80FFFFFFFFFFFFFFFFFFFC00000003FFFC00000000003FFFFFFFFFFFFC\r\n01FF01FFFFFFFFFFFFFFFFFFFE00000003FFFC00000000007FFFFFFFFFFFFE\r\n03FF03FFFFFFFFFFFFFFFFFFFF00000003FFFC0000000000FFFFFFFFFFFFFE\r\n03FE07FFC07FF07FFFFFFFFFFF00000003FFFC0000000001FFFFFFFFFFFFFC\r\n07FE0FFF803FF07FFFFFFFFFFF80000003FFFC0000000001FFFFFC000FFFF8\r\n07FC0FFF001FF07FFFFFFFFFFF80000003FFFC0000000003FFFFE00001FFE0\r\n0FF81FFE000FF07FFFFFFFFFFF80000003FFFC0000000007FFFF800000FFC0\r\n0FF81FFE000FF07FFFFFFFFFFFC0000003FFFC0000000007FFFF0000003F80\r\n1FF83FFC000FF07FFFFFFFFFFFC0000003FFFC0000000007FFFE0000001F00\r\n1FF03FFC000FF07FFFFFFFFFFFE0000003FFFC000000000FFFFC0000000E00\r\n1FF07FFE000FF07FFFFFFFFFFFE0000003FFFC000000000FFFF80000000400\r\n3FE07FFE000FF07FFFFFFFFFFFE0000003FFFC000000001FFFF00000000000\r\n3FE0FFFE001FF07FFFFFFFFFFFE0000003FFFC000000001FFFF00000000000\r\n3FE0FFFF001FF07FFFFFFFFFFFF0000003FFFC000000001FFFE00000000000\r\n3FC0FFFF803FF07FFFFFFFFFFFF0000003FFFC000000001FFFE00000000000\r\n7FC1FFFFE0FFF07FFFFFFFFFFFF0000003FFFC000000003FFFE00000000000\r\n7FC1FFFFFFFFF07FFFFFFFFFFFF0000003FFFC000000003FFFC00000000000\r\n7FC1FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC00000000000\r\n7F81FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC00000000000\r\n7F83FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC00000000000\r\n7F83FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC00000000000\r\n7F83FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC0000FFFFFFF\r\nFF83FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FFFFFFFFFFFF8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FF000000007F8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FF000000007F8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FF000000007F8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FF000000007F8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FFFFFFFFC07F8000003FFFC000000003FFFC0001FFFFFFF\r\nFF83FFFFFFFFF07FFFFFFFFF07F8000003FFFC000000003FFFC0001FFFFFFF\r\n7F83FFFFFFFFF07FFFFFFFFF07F8000003FFFC000000003FFFC0001FFFFFFF\r\n7F83FFFFFFFFF07FFFFFFFFE07F8000003FFFC000000003FFFC0001FFFFFFF\r\n7F83FFFFFFFFF07FFFFFFFFE0FF8000003FFFC000000003FFFC0001FFFFFFF\r\n7F81FFFFFFFFF07FFFFFFFFE0FF8000003FFFC000000003FFFC0000FFFFFFF\r\n7FC1FFFFFFFFF07FFFFFFFFE0FF8000003FFFC000000003FFFC00000007FFF\r\n7FC1FFFFFFFFF07FFFFFFFFE0FF0000003FFFC000000003FFFE00000007FFF\r\n7FC1FFFFFFFFF07FFFFFFFFC0FF0000003FFFC000000001FFFE00000007FFF\r\n3FC0FFFFFFFFF07FFFFFFFFC1FF0000003FFFC000000001FFFE00000007FFF\r\n3FE0FFFFFFFFF07FFFFFFFFC1FF0000003FFFC000000001FFFF00000007FFF\r\n3FE0FFFFFFFFF07FFFFFFFF81FE0000003FFFC000000001FFFF00000007FFF\r\n3FE07FFFFFFFF07FFFFFFFF83FE0000003FFFC000000000FFFF80000007FFF\r\n1FF07FFFFFFFF07FFFFFFFF03FE0000003FFFC000000000FFFF80000007FFF\r\n1FF03FFFFFFFF07FFFFFFFF03FE0000003FFFC000000000FFFFC0000007FFF\r\n1FF83FFFFFFFF07FFFFFFFE07FC0000003FFFC0000000007FFFE0000007FFF\r\n0FF81FFFFFFFF0000FFFFFE07FC0000003FFFC0000000007FFFF8000007FFF\r\n0FF81FFFFFFFF0000FFFFFC0FF80000003FFFC0000000003FFFFC00000FFFF\r\n07FC0FFFFFFFF0000FFFFFC0FF80000003FFFFFFFFFFFE03FFFFF80007FFFF\r\n07FE07FFFFFFF0000FFFFF81FF80000003FFFFFFFFFFFF01FFFFFFFFFFFFFF\r\n03FE07FFFFFFF0000FFFFF03FF00000003FFFFFFFFFFFF01FFFFFFFFFFFFFF\r\n03FF03FFFFFFFFFFFFFFFF03FF00000003FFFFFFFFFFFF00FFFFFFFFFFFFFF\r\n01FF01FFFFFFFFFFFFFFFE07FE00000003FFFFFFFFFFFF007FFFFFFFFFFFFF\r\n01FF80FFFFFFFFFFFFFFFC0FFC00000003FFFFFFFFFFFF003FFFFFFFFFFFFF\r\n00FFC07FFFFFFFFFFFFFF80FFC00000003FFFFFFFFFFFF001FFFFFFFFFFFFF\r\n00FFE03FFFFFFFFFFFFFF01FF800000003FFFFFFFFFFFF000FFFFFFFFFFFFF\r\n007FF01FFFFFFFFFFFFFE03FF800000003FFFFFFFFFFFF0007FFFFFFFFFFFE\r\n003FF80FFFFFFFFFFFFFC07FF000000003FFFFFFFFFFFF0001FFFFFFFFFFF8\r\n001FFC07FFFFFFFFFFFF80FFE000000003FFFFFFFFFFFF00007FFFFFFFFFE0\r\n001FFE03FFFFFFFFFFFE01FFC000000003FFFFFFFFFFFF00001FFFFFFFFF00\r\n000FFF00FFFFFFFFFFFC03FFC000000003FFFFFFFFFFFF000003FFFFFFF800\r\n0007FF807FFFFFFFFFF007FF80000000000000000000040000003FFFFF0000\r\n0003FFC01FFFFFFFFFC00FFF00000000000000000000000000000000000000\r\n0001FFE007FFFFFFFF003FFE00000000000000000000000000000000000000\r\n0000FFF800FFFFFFFC007FFC00000000000000000000000000000000000000\r\n00007FFE001FFFFFE001FFF800000000000000000000000000000000000000\r\n00003FFF0001FFFE0007FFF000000000000000000000000000000000000000\r\n00001FFFC0000000001FFFE000000000000000000000000000000000000000\r\n00000FFFF0000000007FFF8000000000000000000000000000000000000000\r\n000003FFFE00000001FFFF0000000000000000000000000000000000000000\r\n000001FFFFC000001FFFFE0000000000000000000000000000000000000000\r\n0000007FFFFE0001FFFFF80000000000000000000000000000000000000000\r\n0000003FFFFFFFFFFFFFE00000000000000000000000000000000000000000\r\n0000000FFFFFFFFFFFFFC00000000000000000000000000000000000000000\r\n00000003FFFFFFFFFFFF000000000000000000000000000000000000000000\r\n00000000FFFFFFFFFFFC000000000000000000000000000000000000000000\r\n000000003FFFFFFFFFE0000000000000000000000000000000000000000000\r\n0000000007FFFFFFFF00000000000000000000000000000000000000000000\r\n00000000007FFFFFF800000000000000000000000000000000000000000000\r\n000000000007FFFF0000000000000000000000000000000000000000000000\r\n00000000000000000000000000000000000000000000000000000000000000\r\n~DG13002577,102,3,\r\n000000\r\n000000\r\n000000\r\n000000\r\n000000\r\n000000\r\n000800\r\n001C00\r\n001C00\r\n001C00\r\n001C00\r\n003E00\r\n00FFC0\r\n03FFE0\r\n039CF0\r\n071C70\r\n071C30\r\n071C38\r\n071C30\r\n071C70\r\n039CE0\r\n03FFE0\r\n01FF80\r\n007E00\r\n001C00\r\n001C00\r\n001C00\r\n000800\r\n000000\r\n000000\r\n000000\r\n000000\r\n000000\r\n000000\r\n~DG13008470,3630,30,\r\n00007FFFFFFFFFFFF8000000000000000000000000000000000000000000\r\n00007FFFFFFFFFFFF800000000000000000001FFFFFFFFFFFF0000000000\r\n00007FFFFFFFFFFFF80000000000000000000FFFFFFFFFFFFFC000000000\r\n00007FFFFFFFFFFFF80000000000000000003FFFFFFFFFFFFFF000000000\r\n00007FFFFFFFFFFFF8000000000000000000FFFFFFFFFFFFFFFC00000000\r\n00007C0000000000F8000000000000000001FFFFFFFFFFFFFFFE00000000\r\n00007C0000000000F8000000000000000003FFFFFFFFFFFFFFFF00000000\r\n00007C0000000000F8000000000000000007FFFFFFFFFFFFFFFF80000000\r\n00007C0000000000F800000000000000000FFFFFFFFFFFFFFFFFC0000000\r\n00007C0000000000F800000000000000001FFFFFFFFFFFFFFFFFE0000000\r\n00007C0000000000F800000000000000001FFFFFFFFFFFFFFFFFF0000000\r\n00007FFFFFFFFFFFF800000000000000003FFFFFFFFFFFFFFFFFF0000000\r\n00007FFFFFFFFFFFF800000000000000003FFFFFFFFFFFFFFFFFF8000000\r\n00007FFFFFFFFFFFF800000000000000007FFFFFFFFCFFFFFFFFF8000000\r\n00007FFFFFFFFFFFF800000000000000007FFFFFFFF03FFFFFFFFC000000\r\n00007C0000000000F80000000000000000FFFFFFFFE00FFFFFFFFC000000\r\n00007C0000000000F80000000000000000FFFFFFFF8007FFFFFFFC000000\r\n00007C0000000000F80000000000000000FFFFFFFF0001FFFFFFFC000000\r\n00007C0000000000F80000000000000000FFFFFFFC0000FFFFFFFE000000\r\n00007C0000000000F80000000000000000FFFFFFF001003FFFFFFE000000\r\n00007C0000000000F80000000000000000FFFFFFE007800FFFFFFE000000\r\n00007C0000000000F80000000000000000FFFFFF800FE007FFFFFE000000\r\n00007C0000000000F80000000000000000FFFFFF003FF001FFFFFE000000\r\n00007C0000000000F80000000000000000FFFFFC00FFFC00FFFFFE000000\r\n00007C01FE01FE00F80000000000000000FFFFF801FFFF003DFFFE000000\r\n00007C03FE01FF00F80000000000000000FFFFE007FFFF80003FFE000000\r\n00007C07FE01FF80F80000000000000000FFFF800FFFFFE0001FFE000000\r\n00007C0700000380F80000000000000000FFFF003FFFFFF0000FFE000000\r\n00007C0700000380F80000000000000000FFFC00FFFFFFFC0007FE000000\r\n00007C0700000380F80000000000000000FFF801FFFFFFFE0707FE000000\r\n00007C0700000380F80000000000000000FFF807FFFFFFFE0F87FE000000\r\n00007C0700000380F80000000000000000FFF80FFFFFFFFE0F87FE000000\r\n00007C0200000180F80000000000000000FFF81FFFFFFFFE0F87FE000000\r\n00007C0000000000F80000000000000000FFF81FFFFFFFFF0707FE000000\r\n00007C0000000000F80000000000000000FFF81FFFFFFFFF0007FE000000\r\n00007C0000000000F80000000000000000FFF81FFFFFFFFF800FFE000000\r\n00007C07FFFFFF80F80000000000000000FFF81FFFFFFFFFC01FFE000000\r\n00007C07FFFFFF80F80000200400C00000FFF81FFFFFFFFFE03FFE000000\r\n00007C07FFFFFF80F80000F81F01E00000FFF81FFFFFFFFFF07FFE000000\r\n00007C0000000000F80000F81F03E00000FFF81FFC0000FFF07FFE000000\r\n00007C0000000000F80000F81F03E00000FFF81FF800007FF07FFE000000\r\n00007C0000000000F80000F81F01E00000FFF81FF800007FF07FFE000000\r\n00007C0600000180F80000200400800000FFF81FF800007FF07FFE000000\r\n00007C0700000380F80000000000000000FFF81FF800007FF07FFE000000\r\n00007C0700000380F80000000000000000FFF81FF81FF07FF07FFE000000\r\n00007C0700000380F80000000000000000FFF81FF81FF07FF07FFE000000\r\n00007C0700000380F80000000000000000FFF81FF81FF07FF07FFE000000\r\n00007C0700000380F80000000000000000FFF81FF81FF07FF07FFE000000\r\n00007C0780000380F80000000000000000FFF81FF81FF07FF07FFE000000\r\n00007C03FE01FF00F80000000000000000FFF81FF81FF07FF07FFE000000\r\n0000FC03FE01FF00F80000000000000000FFF81FF81FF07FF07FFE000000\r\n0001FC007E01FC00F80000000000000000FFF81FF81FF07FF07FFE000000\r\n0001FC0000000000F80000000000000000FFF81FF81FF07FF07FFE000000\r\n0003FC0000000000F80000000000000000FFE00FF81FF07FF07FFE000000\r\n0007FC0000000000F80000000000000000FFC007F81FF07FF07FFE000000\r\n000FFC0000000000F80000000000000000FFC003F81FF07FF07FFE000000\r\n001FFC0000000000F80000000000000000FF8181F81FF07FF07FFE000000\r\n001FFC0038000000F80000000000000000FF83C1F81FFFFFF07FFE000000\r\n003F7C00FE000000F80000000000000000FF87E1F81FFFFFF07FFE000000\r\n007E7C03FF000000F80000000000000000FF87E1F81FFFFFE07FFE000000\r\n00FC7C07FF800000F80000000000000000FF83C1F8000000007FFE000000\r\n01F87C0FFFC00000F80000000000000000FF8003F8000000007FFC000000\r\n01F87C1FCFC00000F80000000000000000FFC003F8000000007FFC000000\r\n03F07C3F87E00000F80000000000000000FFE007F8000000007FFC000000\r\n07E07C7F03E00000F800000000000000007FF00FFC00000000FFFC000000\r\n0FC07CFE03E00000F800000000000000007FFC3FFFFFFFFFFFFFF8000000\r\n0F807FFC03E00000F800000000000000003FFFFFFFFFFFFFFFFFF8000000\r\n1F807FF803F00000F800000000000000003FFFFFFFFFFFFFFFFFF0000000\r\n1F007FF003E00000F800000000000000001FFFFFFFFFFFFFFFFFF0000000\r\n3E007FE003E00000F800000000000000001FFFFFFFFFFFFFFFFFE0000000\r\n3E007F8003E00000F800000000000000000FFFFFFFFFFFFFFFFFC0000000\r\n3E007F0003E00000F8000000000000000007FFFFFFFFFFFFFFFF80000000\r\n7C00FE0007E00000F8000000000000000003FFFFFFFFFFFFFFFF00000000\r\n7C01FC000FFFFFFFF8000000000000000001FFFFFFFFFFFFFFFE00000000\r\n7C03F8000FFFFFFFF8000000000000000000FFFFFFFFFFFFFFFC00000000\r\n7C07F0001FFFFFFFF80000000000000000003FFFFFFFFFFFFFF000000000\r\n780FE0003FFFFFFFF80000000000000000000FFFFFFFFFFFFFC000000000\r\n781FC0007FFFFFFFF800000000000000000001FFFFFFFFFFFF0000000000\r\n781F8000FC000000F8000000000000000000000000000000000000000000\r\n780F0001F8000000F8000000000000000000000000000000000000000000\r\n78060003F0000000F8000000000000000000000000000000000000000000\r\n78000007F0000000F8000000000000000000000000000000000000000000\r\n78000007E0000000F8000000000000000000000000000000000000000000\r\n78000007C0000000F8000000000000000000000000000000000000000000\r\n78000007FFFFFFFFF8000000000000000000000000000000000000000000\r\n78000007FFFFFFFFF8000000000000000000000000000000000000000000\r\n78000007FFFFFFFFF8000000000000000000000000000000000000000000\r\n78000007FFFFFFFFF8000000000000000000000000000000000000000000\r\n78000007FFFFFFFFF8000000000000000000000000000000000000000000\r\n78000007C000000000000000000000000000000000000000000000000000\r\n78000007C000000000000000000000000000000000000000000000000000\r\n78000007C000000000000000000000000000000000000000000000000000\r\n78000007C000000000000000000000000000000000000000000000000000\r\n7800000FC0001E00000000000000000003E00000FFFF1C00000000001F80\r\n7800000F80001F0000000000000FC0003FFC0001FFFF9E00000000007FE0\r\n7800001F80001F0000000000000FC0007FFF0001FFFF9E0006000000FFF0\r\n7800003F00001F0000000000000FC000FFFF8000FFFF1E000F800001F0F8\r\n780000FF00001F0000000000000FC001FFFF000003C01E000F800003E078\r\n78003FFE00001F0000000000000FC003F80E000003C01E000F000003C03C\r\n78003FFC00001F0000000000000FC003E000000003C01E0002000003C03C\r\n78003FF000001F0000000000000FC003E000000003C01FF000007807C03C\r\n78003FC000001F0000000000000FC007C000000003C01FFC0003FF07801E\r\n78003E0000001E0000000000000FC007C000000003C01FFF0F07FF87801E\r\n7800000000003E0000000000000FC007C0FF800003C01FBF0F0FFFC7801E\r\n7800000000003E0000000000000FC007C0FF800003C01E0F8F0F07C7801E\r\n7800000000007E0000000000000FC007C0FF800003C01E078F0F03C7801E\r\n7800000000007C0000000000000FC007C0FF800003C01E078F0F03C7801E\r\n780000000000FC0000000000000FC007C00F800003C01E078F0F03C7801E\r\n780000000001F80000000000000FC007E00F800003C01E078F0F03C3C03C\r\n780000000003F80000000000000FC003E00F800003C01E078F0F03C3C03C\r\n780000000007F00000000000000FC003F00F800003C01E078F0F03C3C03C\r\n78000000000FE00000000000000FC001FC1F800003C01E078F0F03C3E07C\r\n78000000001FC00000000000000FFFF1FFFF800003C01E078F0F03C1F0F8\r\n78000000003F800000000000000FFFF0FFFF800003C01E078F0F03C0FFF0\r\n78000000003F000000000000000FFFF07FFF000003C01E078F0F03C07FF0\r\n78000000003E0000000000000007FFF00FFC000003C01C07070E03C03FF0\r\n78000000003E000000000000000000000000000000000000000000000078\r\n78000000003E00000000000000000000000000000000000000000000003C\r\n78000000003E00000000000000000000000000000000000000000000001E\r\n78000000003E000000000000000000000000000000000000000000000000\r\n78000000001C000000000000000000000000000000000000000000000000\r\n~DG13008590,10621,19,\r\n0000000000000000003FFFFFFFFFFFF8000000\r\n0000000000000000003FFFFFFFFFFFF80001E0\r\n0000000000000000003FFFFFFFFFFFF8000FC0\r\n0000000000000000003FFFFFFFFFFFF8007F00\r\n0000000000000000003FFFFFFFFFFFF803FC00\r\n0000000001E00000003FFFFFFFFFFFF81F8C00\r\n0000000003E00000003FFCFFFFFFFFF83C0C00\r\n0000000003E00000003FFC3FFFFFFFF81F8C00\r\n0000000003E00000003FFE0FFFFFFFF803FC00\r\n0000000003E00000003FFF07FFFFFFF8007F00\r\n0000000003E00000003FFF01FFFFFFF8000FC0\r\n0000003FFFE00000003FFF00FFFFFFF80000E0\r\n0000007FFFE00000003FFF807FFFFFF8000000\r\n0000007FFFE00000003FFF803FFFFFF81FFFC0\r\n0000007FFFE00000003FFFC03FFFFFF83FFFE0\r\n0000007FFFE00000003FFFC01FFFFFF8000000\r\n0000000000000000003FFFC00FFFFFF8000000\r\n0000000000600000003FFFC007FFFFF8000000\r\n00F8000007E00000003FFFC007FFFFF83FFFC0\r\n07FF00003FE00000003FFFC003FFFFF83FFFE0\r\n0FFFC003FFE00000003FFFC003FFFFF80007C0\r\n1FFFE01FFFE00000003FFFE003FFFFF8000F00\r\n3FFFE07FFF800000003FFFC001FFFFF8003C00\r\n3F03F07FE7800000003FFFC001FFFFF800F000\r\n3C01F07F87800000003FFFC001FFFFF803C000\r\n7C01F07FFF800000003FFFC000FFFFF80F0000\r\n7C01F03FFFC00000003FFFC000FFFFF83FFFC0\r\n3E03F007FFE00000003FFFC000FFFFF83FFFE0\r\n3FFFF000FFE00000003FFFC000FFFFF8000000\r\n1FFFE0000FE00000003FFFC000FFFFF8000000\r\n1FFFC00001E00000003FFF8000FFFFF803FC00\r\n07FF800000000000003FFF8000FFFFF80FFF00\r\n01FE003FFFC00000003FFF8000FFFFF81E03C0\r\n0000007FFFE00000003FFF8000FFFFF81800C0\r\n0000007FFFE00000003FFF0000FFFFF9F000E0\r\n3FFFF07FFFE00000003FFF0001FFFFFFB00060\r\n3FFFF07FFFE00000003FFF0001FFFFFFB00060\r\n3FFFF00000000000003FFE0001FFFFF9F800E0\r\n3FFFF00000000000003FFE0001FFFFF81801C0\r\n003FE00707E00C3F003FFE0003FFFFF80F0780\r\n00FF801FDFE03CFF803FFC0003FFFFF807FF00\r\n03FE003FFFE07CFFC03FFC0003FFFFF801FC00\r\n0FF8003FFFE07DFFE03FF80007FFFFF8000000\r\n3FF0003FFFE0FDFFE03FF80007FFFFF83800E0\r\n3FFFF07C7800F9F3E03FF0000FFFFFF83E00E0\r\n3FFFF07C7800FBF3E03FF0000FFFFFF83F00E0\r\n3FFFF07C7800FFE7E03FE0001FFFFFF83BC0E0\r\n3FFFF07FFFE07FEFC03FE0001FFFFFF838E0E0\r\n0000007FFFE07FCFC03FC0003FFFFFF83878E0\r\n0000007FFFE03FCF803FC0003FFFFFF8381EE0\r\n0000007FFFE01F0E003F80007FFFFFF83807E0\r\n0000003FFFE00000003F80007FFFFFF83803E0\r\n0000000000000000003F80007FFFFFF80000C0\r\n0000003C00007FFE003F0000FFFFFFF80000E0\r\n0000007C00007FFF803F0000FFFFFFF80007E0\r\n0000007C00007FFFC03F0000FFFFFFF8003F80\r\n00FC007C00007FFFC03F0000FFFFFFF801FC00\r\n07FF007FFFE07FFFE03F0001FFFFFFF80FDC00\r\n0FFFC07FFFE00003E03F0001FFFFFFF83E0C00\r\n1FFFE07FFFE00003E03F0001FFFFFFF83E0C00\r\n3FFFE07FFFE00003E03F0001FFFFFFF80FFC00\r\n3F03F07FFFE07FFFE03F0001FFFFFFF800FC00\r\n3C01F07C00007FFFC03F0001FFFF7FF8001FC0\r\n7C01F07C00007FFFC03F0001FFFF7FF80003E0\r\n3C01F07C00007FFF803F0001FFFE7FF8000000\r\n3E03F03C00007FFE003F8001FFFE7FF8000000\r\n3FFFF0000E000000003F8001FFFC7FF83FFFE0\r\n1FFFE00E3F800001C03F8001FFF87FF83FFFC0\r\n1FFFC03E7FC0000FC03F8001FFF8FFF80FC000\r\n07FF803EFFE000FFC03FC001FFF0FFF800FC00\r\n01FC007EFFE00FFFC03FC000FFE0FFF8001F80\r\n0000007CF9F07FFF803FE000FFC1FFF80001E0\r\n01FC0079F9F07FFF003FE000FF81FFF8000FC0\r\n07FF8079F1F07F8F003FF000FF01FFF800FE00\r\n1FFFC07FF3E07FCF003FF0007E03FFF80FE000\r\n1FFFE07FF7E07FFF003FF8007E03FFF83E0000\r\n3FFFE03FE7C03FFFC03FF8007C03FFF83FFFE0\r\n3F03F01FC78007FFC03FFC003C03FFF81FFFC0\r\n3E01F0070300007FC03FFE003C03FFF8000000\r\n3E01F0000000000FC03FFE001E03FFF80001E0\r\n3E01F00000000000C03FFF000E01FFF8000FC0\r\n3FFFF07FFF800000003FFF800F00FFF8007F00\r\n3FFFF07FFFC07FFFC03FFFC007807FF803FC00\r\n3FFFF07FFFE07FFFC03FFFE003C01FF81F8C00\r\n3FFFF07FFFE07FFFC03FFFF001F007F83C0C00\r\n1FFFC00003E07FFFC03FFFF000F803F81F0C00\r\n0000000001F07FFFC03FFFF8007C01F807FC00\r\n0000000001F000FF003FFFFC003C00F8007E00\r\n3FFFF00003F003FC003FFFFE000000F8000FC0\r\n3FFFF03FFFE01FF0003FFFFF000000780001E0\r\n3FFFF07FFFE07FC0003FFFFF80000078000000\r\n3FFFF07FFFC07FFFC03FFFFFC0000078000000\r\n3FFFE07FFF807FFFC03FFFFFE0000078000000\r\n0000003FFE007FFFC03FFFFFE0000078000000\r\n0000C00000007FFFC03FFFFFF0000078000000\r\n3E01F00000000000003FFFFFF00000F8000000\r\n3F01F007FE000000003FFFFFF00000F80000E0\r\n3FC1F01FFF800003C03FFFFFF00001F80007E0\r\n3FE1F01FFFC0003FC03FFFFFF00001F8003F80\r\n3FF1F03FFFE003FFC03FFFFFF00003F801FC00\r\n3FFFF03F8FE01FFFC03FFFFFE00007F80FCC00\r\n3FFFF07E03E07FFF003FFFFFE0000FF81E0C00\r\n3E7FF07C03E07FEF003FFFFFC0001FF81F0C00\r\n3E3FF07C03E07F0F003FFFFF80003FF807FC00\r\n3E0FF07FFFE07FFF003FFFFF0000FFF800FE00\r\n3E07F07FFFE07FFF003FFFFF0001FFF8001FC0\r\n3E03F07FFFE01FFFC03FFFFE0003FFF80003E0\r\n0000007FFFE001FFC03FFFFC0007FFF8000060\r\n0000003FFFE0001FC03FFFF8001FFFF8000000\r\n3FFF800000000003C03FFFF0003FFFF8000000\r\n3FFFC00000000000003FFFF0007FFFF8000000\r\n3FFFE03FFFE00000003FFFE000FFFFF8000000\r\n3FFFF07FFFE07FFFC03FFFC000FFFFF8000000\r\n000FF07FFFE07FFFC03FFF8001FFFFF80001E0\r\n0001F07FFFE07FFFC03FFF8003FFFFF8000FE0\r\n0001F03FFFE07FFFC03FFF0013FFFFF8007F00\r\n0001F0007F807FF0003FFF0023FFFFF803FC00\r\n3FFFF001FE003FFF803FFE0023FFFFF81F8C00\r\n3FFFF007F80001FFC03FFE0063FFFFF81C0C00\r\n3FFFE03FE000003FC03FFC0063FFFFF81F8C00\r\n3FFFC07FFFE003FFC03FFC0063FFFFF803FC00\r\n3FFF807FFFE07FFF003FF8007FFFFFF8007F00\r\n0000007FFFE07FE0003FF8007FFFFFF8000FE0\r\n0000007FFFE07FFFC03FF000FFFFFFF80000E0\r\n03FE000000007FFFC03FF000FFFFFFF8000000\r\n0FFF800000007FFFC03FF000FFFFFFF8020300\r\n1FFFC00000007FFFC03FE0007FFFFFF80F0780\r\n1FFFE07FFFE00000003FE0007FFFFFF81C01C0\r\n3FFFE07FFFE00000003FE0007FFFFFF8180060\r\n3E03F07FFFE00000003FC0007FFFFFF838006E\r\n3E01F07FFFE00000003FC0007FFFFFF838007E\r\n3E01F03FFFE00000003FC0007FFFFFF8180072\r\n3FFFF00000000000003FC0003FFFFFF81800E2\r\n3FFFF00000000000003F80003FFFFFF80E01C0\r\n3FFFF00000000000003F80003FFFFFF807FF80\r\n3FFFF00000000003C03F80003FFFFFF803FE00\r\n3FFFF00000007803C03F80001FFFFFF8000000\r\n00000000000079E3C03F80001FFFFFF8000000\r\n00000000000079E3C03F00001FFFFFF8180060\r\n01FE0000000079E3C03F00000FFFFFF8187060\r\n07FF8003FE0079E3C03F00000FFFFFF8187060\r\n1FFFC00FFF8079E3C03F000007FFFFF8187060\r\n1FFFE01FFFC07FFFC03F000007FFFFF8187060\r\n3FFFF03FFFE07FFFC03F000007FFFFF8187060\r\n3E03F07FFFE07FFFC03F000003FFFFF8187060\r\n7C01F07C03F07FFFC03F000003FFFFF81FFFE0\r\n7C01F07C01F07FFFC03F000001FFFFF81FFFE0\r\n3C01F07C01F00000003F000001FFFFF8000000\r\n3F03F07C03F00000003F000001FFFFF8000000\r\n3FFFE07FDFE00FFC003F000000FFFFF8000000\r\n1FFFE03FFFE01FFF003F000000FFFFF81FFFE0\r\n0FFFC01FFFC03FFF803F8000007FFFF81FFFE0\r\n07FF000FFF807FFFC03F8000007FFFF8006000\r\n00FC0003FE007E0FC03F8000007FFFF8006000\r\n0000000000007C07C03FC000003FFFF8006000\r\n0787F00003E07807C03FC000003FFFF8006000\r\n1FFFF00003E07807C03FC000001FFFF8006000\r\n1FFFF00003E07FFFC03FE000001FFFF8006000\r\n3FFFF00003E07FFFC03FE000001FFFF81FFFE0\r\n3FFFE00003E07FFFC03FF000000FFFF81FFFE0\r\n3C7C000007E07FFFC03FF000000FFFF8000000\r\n3C7C007FFFE07FFFC03FF800000FFFF8000000\r\n3C7C007FFFE00000003FF800000FFFF8000000\r\n3FFFE07FFFE00000003FFC000007FFF81FFFE0\r\n3FFFF07FFFE00000003FFC000007FFF80FFFE0\r\n3FFFF00000000000003FFE000007FFF8000780\r\n3FFFF00000000000003FFE000007FFF8001E00\r\n3FFFF003FC000000003FFF000007FFF8007800\r\n0000000FFF000000003FFF800007FFF801E000\r\n03C0001FFFC00000003FFF800007FFF807C000\r\n0FF0003FFFE00000003FFFC00007FFF81F0000\r\n1FF8003FFFE00000003FFFC00007FFF81FFFE0\r\n3FFC007E03E00000003FFFE00007FFF81FFFE0\r\n3FFC007C01F00000003FFFF00007FFF8000000\r\n3E7C007C01F00000003FFFF00007FFF8000000\r\n3C3C007C01F00000003FFFF80007FFF803FE00\r\n3C3C007F07E00000003FFFF80007FFF807FF80\r\n3FFFE03FFFE00000003FFFFC000FFFF81E01C0\r\n3FFFF03FFFC00000003FFFFC000FFFF81800E0\r\n3FFFF01FFF800000003FFFFE000FFFF8180060\r\n3FFFF007FF000000003FFFFE001FFFF8380060\r\n3FFFF000F0000000003FFFFF001FFFF8380060\r\n0000000180000000003FFFFF001FFFF8180060\r\n0000000FF0000000003FFFFF003FFFF81C00C0\r\n0000001FF8000000003FFFFF803FFFF80F03C0\r\n0000003FF8000000003FFFFF807FFFF807FF00\r\n0000003FFC000000003FFFFF807FFFF800FC00\r\n0000003C7C000000003FFFFF80FFFFF8000000\r\n0000007C7C000000003FFFFFC0FFFFF8000200\r\n0000007C7C000000003FFFFFC1FFFFF8070780\r\n0000007FFFC00000003FFFFFC3FFFFF81E03C0\r\n0000007FFFE00000003FFFFFC7FFFFF81800E0\r\n0000007FFFE00000003FFFFFC7FFFFF8180060\r\n0000007FFFE00000003FFFFFCFFFFFF8380060\r\n0000007FFFE00000003FFFFFDFFFFFF8180060\r\n0000000000000000003FFFFFFFFFFFF8180060\r\n0000000000000000003FFFFFFFFFFFF81C00C0\r\n0000000000000000003FFFFFFFFFFFF80FCFC0\r\n0000000000000000003FFFFFFFFFFFF803FF00\r\n0000000000000000003FFFFFFFFFFFF8007800\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n00000000000000000000000000000000000000\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8\r\n780000000000000000000000000000FFFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000060000000000007FFFFFF8\r\n70001800000000039F8000000000007FFFFFF8\r\n7001FF000000000338C000000000007FFFFFF8\r\n7003FF800000000330C000000000007FFFFFF8\r\n700783C000000003F38000000000007FFFFFF8\r\n700700C000000000020000000000007FFFFFF8\r\n700600E000000000000000000000007FFFFFF8\r\n700600E000000000078000000000007FFFFFF8\r\n700600C0000000007E0000000000007FFFFFF8\r\n700701C000000003C60000000000007FFFFFF8\r\n7003C3C000000001FE0000000000007FFFFFF8\r\n7001FF80000000001F8000000000007FFFFFF8\r\n7000FE0000000000018000000000007FFFFFF8\r\n7000000000000003FF8000000000007FFFFFF8\r\n70060000000000000F8000000000007FFFFFF8\r\n70060000000000001E0000000000007FFFFFF8\r\n7006000000000000F00000000000007FFFFFF8\r\n7007000000000003FF8000000000007FFFFFF8\r\n7007FFC000000000000000000000007FFFFFF8\r\n7007FFC00000000000000000000FE07FFFFFF8\r\n700600000000000007800000001EF87FFFFFF8\r\n70060000000000007E0000000030187FFFFFF8\r\n7006000000000003C600000000301C7FFFFFF8\r\n7002000000000001FE00000000301C7FFFFFF8\r\n70000000000000001F8000000038387FFFFFF8\r\n7000000000000000018000CFC01FF07FFFFFF8\r\n7007FFC0000000030000039CE000007FFFFFF8\r\n7007FFC000000003800003186020087FFFFFF8\r\n700007C000000003FF800338E03C787FFFFFF8\r\n70000F8000000003000001F3C00FE07FFFFFF8\r\n70003E0000000003000000010007C07FFFFFF8\r\n7000F8000000000000000318E01EF07FFFFFF8\r\n7001E00000000003FF800318E038387FFFFFF8\r\n7007FFC00000000000800318E000007FFFFFF8\r\n7007FFC00000000000C00398E000007FFFFFF8\r\n7003FFC00000000000C003FFE03FF87FFFFFF8\r\n700000000000000000C000000000007FFFFFF8\r\n7000000000000003FFC0007E0031007FFFFFF8\r\n7000000000000000000001FFC031807FFFFFF8\r\n700630C00000000000000380C031807FFFFFF8\r\n700638C0000000003C000300E03B807FFFFFF8\r\n700638C000000001FF800380E03FF87FFFFFF8\r\n700638C000000003018003FFE000007FFFFFF8\r\n700638C00000000300C000000000007FFFFFF8\r\n700638C00000000301800001E000007FFFFFF8\r\n7007FFC000000001FF00001FC000007FFFFFF8\r\n7007FFC000000000380001FF0000007FFFFFF8\r\n7007FFC000000000E00003C30020087FFFFFF8\r\n7000000000000003F80000FF0033187FFFFFF8\r\n70000000000000031800000FC033187FFFFFF8\r\n7007FFC00000000318000000C033187FFFFFF8\r\n7007FFC000000003FF80007E003B987FFFFFF8\r\n7007C00000000000000001FFC03FF87FFFFFF8\r\n7007F800000000003C000380C000007FFFFFF8\r\n7000FF8000000001FF800300E03FF87FFFFFF8\r\n700007C00000000301800380E000F87FFFFFF8\r\n70000FC00000000300C003FFE001E07FFFFFF8\r\n7000FF8000000003018000000007807FFFFFF8\r\n7007F00000000001FF000000003E007FFFFFF8\r\n7007E00000000000380003FFE03FF87FFFFFF8\r\n7007FFC000000000000000000000007FFFFFF8\r\n7007FFC000000001E1C000004000007FFFFFF8\r\n7000000000000003BF000000E00FE07FFFFFF8\r\n70000000000000031C000000E01EF87FFFFFF8\r\n7003FFC00000000318000000E030187FFFFFF8\r\n7007FFC000000003FF8003FFE0300C7FFFFFF8\r\n7007FFC0000000000000000000301C7FFFFFF8\r\n700000000000000000000001E038387FFFFFF8\r\n70000000000000030000001FC01FF07FFFFFF8\r\n7000000000000003800001FF0000007FFFFFF8\r\n7001FF0000000003FF8003C30031007C0003F8\r\n7003FF8000000003000000FF0031807C0003F8\r\n700781C0000000030000000FC031807C0003F8\r\n700700C00000000000800000C03B807C07FFF8\r\n700700C00000000330C00001003FF87E007FF8\r\n700600C000000003308001C3C000007FC007F8\r\n700600C00000000330C00380E020087FFC03F8\r\n7007FFC000000003FFC003006033187FFF03F8\r\n7007FFC00000000000000381C033187FF003F8\r\n7003FFC000000000000000FF8033187F001FF8\r\n7000000000000003FF80003E003B987C01FFF8\r\n7000000000000003F00000FF803FF87C0FFFF8\r\n7007FFC0000000007F8001C1C000007C0003F8\r\n7007FFC0000000000F800300E000007C0003F8\r\n700007C000000003F80003006000187E0007F8\r\n70000F8000000003FF800381C000187FFFFFF8\r\n70003E0000000000000000FF8000187FFFFFF8\r\n7000F80000030000000000180000187FFFFFF8\r\n7001E0000F07000000000000403FF87FFFFFF8\r\n7007FFC01F9F000000000000E000007FFFFFF8\r\n7007FFC03DFC000006000000E020087FF8FFF8\r\n7003FFC038F800039F800000E033187F801FF8\r\n7000000038E0000338C003FFE033187F000FF8\r\n7000000038C0000330C000000033187E0007F8\r\n7000000038C00003F3800000003B987E3FC3F8\r\n700630C03FFE000002000000003FF87C7FE3F8\r\n700638C03FFF0000008000000030007C7FF3F8\r\n700638C01FFE000330C000000030007C7FF1F8\r\n700638C00000000330C000CFC030007C7FF3F8\r\n700638C00000000330C0039CE03FF87C7FE3F8\r\n700638C000C00003FFC003186038007C3FE3F8\r\n7007FFC007F8000000000338E030007E1F83F8\r\n7007FFC01FFC00003C0001F3C030007F0007F8\r\n7007FFC01C0E0001FF8000010000007F800FF8\r\n700000003807001B018003FFE000007FE03FF8\r\n700000003807001B00C000000000007FFFFFF8\r\n700600003003001301800001E020087FFFFFF8\r\n7006000038070001FF00001FC033187FFFFFF8\r\n7006000038060000380001FF0033187FFFFFF8\r\n700700001E1E0000000003C30033187FFFFFF8\r\n7007FFC00FFC0003FF8000FF003B987FFFFFF8\r\n7007FFC007F800000000000FC03FF87F9F9FF8\r\n700600000000000000000000C000007F1F87F8\r\n7006000000000001DF8001FFC000007E1F87F8\r\n7006000007F8000319C003FFC01FF07C3FC3F8\r\n700200C01FFC000300C001FE0038387C7FE3F8\r\n700003C01C0E000381800007E030187C7FF3F8\r\n70001FC038060001FF00003FC030187C7FF3F8\r\n7000FF0038070000100003F00038187C7FF3F8\r\n7003FE0038070000008003FFE03FF87C3FE3F8\r\n7007C6003807000330C000000000007E1F83F8\r\n7007C6003FFF000330C000000000007F0007F8\r\n7003FE003FFF000330C00318E000007F800FF8\r\n70007F001FFE0003FFC00318E000007FE03FF8\r\n70001FC00000000000000318E000F07FFFFFF8\r\n700003C00000000000000398E039F87FFFFFF8\r\n700000401FFE0001E1C003FFE0339C7FFFFFF8\r\n700000003FFF0003BF00000000338C7FFFFFF8\r\n700000003FFE00031C00007E0037187FFFFFF8\r\n7000000000000003180001FFC01E787FFFFFF8\r\n7000000000000003FF800380C000007FFFE3F8\r\n700000000000000000000300E000087FFFE3F8\r\n700000003FFF000000000380E000F87FFFF7F8\r\n700630C03FFF0000000003FFE007E07FFFFFF8\r\n700638C03E00000000000000003E607FFFFFF8\r\n700638C03FC0000000800000003C607FFFFFF8\r\n700638C003FE000330C00000000FE07FFFFFF8\r\n700638C0003F000330C000000000F87FFFFFF8\r\n700638C0007F000330C000000000087FFFFFF8\r\n7007FFC007FC0003FFC000000000007F9C07F8\r\n7007FFC03F80000000000000001FF07F1C07F8\r\n7007FFC03F000000000000038038387E1C03F8\r\n700000003FFF0000000000038030187C3CE3F8\r\n700000001FFE0000000007FFF030187C7CE3F8\r\n7000000000000000060007FFF038187C7CF3F8\r\n7001FF00000000039F8007FFF03FF87C7FF1F8\r\n7003FF803FF8000338C007FFF000187C7FF3F8\r\n700781C03FFE000330C007838000F87C7FE3F8\r\n700700C0003E0003F38007E38007E07C3FC3F8\r\n700700C000070000020003F3803E607E0F07F8\r\n700600C000030003FF8000FF803C607F0007F8\r\n700600C0000700000000007F800FE07F801FF8\r\n7007FFC0000700000000001F8000F87FE07FF8\r\n7007FFC01FFE00000780000F8000087FFFFFF8\r\n7007FFC03FFE00007E0000038000007FFFFFF8\r\n700000001FF00003C6000000003FF87FFFFFF8\r\n7000000000000001FE0000000000F87FFFFFF8\r\n70000000000000001F80000FC001E07FFFFFF8\r\n70000000000000000180071FE007807FFFFFF8\r\n700000000C7C00030000073FF03E007FFFF3F8\r\n700000001CFE00038000073FF03FF87FFFF3F8\r\n700018003CE70003FF80073CF800007FFFF3F8\r\n7001FF0039C70003000007387800007FFFF3F8\r\n7003FF8031C30003000007F8783FF87FFFF3F8\r\n700783C031C70000000007F07800007FFFF3F8\r\n700700C03F8E0003FF8007F87809F07FFFF3F8\r\n700600E01F9E0000000003F87039F87E0003F8\r\n700600E00E1C000060000000F031987C0003F8\r\n700600C000000003F800000020300C7C0003F8\r\n700701C000000003180000000030187FFFFFF8\r\n7003C3C00000000318000000003C387FFFFFF8\r\n7001FF803FFF0003FF800003800FF07FFFFFF8\r\n7000FE003FFF0000000000078000007FFFFFF8\r\n70000000003E0000000007FFF000007FFFFFF8\r\n70000000007C0000078007FFF03FF87FFFFFF8\r\n7000000001F000007E0007FFF000007FFFFFF8\r\n7001830003C00003C60007FFF000007FFFE3F8\r\n700383C00F800001FE000783801F387FFFE3F8\r\n700701C03FFC00001F8007E3803BF07FFFF7F8\r\n700700F83FFF0000018001F38031C07FFFFFF8\r\n700600FC1FFE0001830000FF8031807FFFFFF8\r\n700600E4000000038380003F803B807FFFFFF8\r\n700700C400C0000300C0001F803FF87CFFFFF8\r\n7003C7C007F80003018000078000007C0FFFF8\r\n7001FF801FFC0001FF000001000FE07C007FF8\r\n7000FE001C0E000018000000001EF87F0007F8\r\n7000000038070000000000010030187FF803F8\r\n70000000380700000000000FC0300C7FFF03F8\r\n7003FFC0300300000000071FE0301C7FF803F8\r\n7007FFC0380700000000073FF038387F800FF8\r\n7007FFC0380600000000073FF01FF07C00FFF8\r\n700000001E1E00000000073C7800007C0FFFF8\r\n700700000FFC0000000007387800007C0FFFF8\r\n7007E00007F80000FE0007F87800007C00FFF8\r\n7003FC0000000003FF8007F07800007F800FF8\r\n70007F8000000007FFC007F87000F07FF803F8\r\n700007C00000000FFFE001F87039F87FFF03F8\r\n700003C00C1C000F83F00000F0339C7FF003F8\r\n70001FC01E1E001F00F0000000338C7F0007F8\r\n7000FF003C0E001E00F000000037187C007FF8\r\n7007F8003807001E00F00000001E787C07FFF8\r\n7007C0003003001F00F000000000007CFFFFF8\r\n700600003807000FEFE000000000087FFFFFF8\r\n700000003806000FFFE000000000F87FFFFFF8\r\n700000401E1E0007FFC000000007E07FFFFFF8\r\n7003E1C00FFC0001FF800000003E607FFFFFF8\r\n7003F3C007F000007C000000003C607CFFFFF8\r\n70073F800000000000000000000FE07C0FFFF8\r\n70071E0000000000FF0006000000F87C007FF8\r\n70061C0000000003FF8007000000087F0007F8\r\n7006180000000007FFE007C00000007FF803F8\r\n700618000000000FFFE007F0001FF07FFF03F8\r\n7007FFC00000000F83F007F80038387FF803F8\r\n7007FFC000C0001E00F007FE0030187F800FF8\r\n7007FFC007F8001E00F0077F8030187C00FFF8\r\n700000001FFC001E00F0071FC038187C0FFFF8\r\n700000001C0E000F01F0070FF03FF87C0FFFF8\r\n700630C03807000FFFE00703F000007C00FFF8\r\n700638C03807000FFFE00700F000087F800FF8\r\n700638C030030007FFC007007000F87FF803F8\r\n700638C038070001FF8007001007E07FFF03F8\r\n700638C03806000038000000003E607FF003F8\r\n700638C01E1E000000000000003C607F0007F8\r\n7007FFC00FFC0000070000FF000FE07C007FF8\r\n7007FFC007F80000070001FFC000F87C07FFF8\r\n7007FFC00000000FFFE007FFE000387CFFFFF8\r\n700000000000000FFFE007FFF03FF87FFFFFF8\r\n700000000007000FFFE00F81F03E007FFFFFF8\r\n70000000001F000FFFE00F007807F07FFFFFF8\r\n70018F8000FE000F07000F007800F87CFFFFF8\r\n70039FC007F8000FC7000F00780FE07C0FFFF8\r\n70071CC01FF80003E7000F80F03E007C007FF8\r\n700638E03E380001FF0007FFF03FF87F0007F8\r\n700638E03E3800007F0007FFF000007FF803F8\r\n700630C01FF800003F0003FFE000087FFF03F8\r\n7007F1C003F800000F0000FF8000F87FF803F8\r\n7003F3C0007E00000300001C0007E07F800FF8\r\n7001C380001F000000000000003E607C00FFF8\r\n700000000003000000000600003C607C0FFFF8\r\n70000000000000001F800780000FE07C0FFFF8\r\n700000000000000E3FE007C00000F87C00FFF8\r\n700000000000000E3FE007F00000087F800FF8\r\n700000000000000E7FF007FC0000007FF803F8\r\n700000000000000E78F007FE003FF87FFF03F8\r\n700000000000000E70F0077F8003807FF003F8\r\n7000FC00003F000FF070071FE003007F0007F8\r\n7001F800001F000FF0700707F003007C007FF8\r\n7003F000000F800FF0F00703F003807C07FFF8\r\n7007E000000FC007F0F00700F03FF87CFFFFF8\r\n7007C0000007C00001E007007000007FFFFFF8\r\n700FC0000007E000006000001000007FFFFFF8\r\n700F80000003E000000000000018707FFFFFF8\r\n700F80000003E000000000000038387FFFFFF8\r\n700F80000001E0000000000000301C7FFFFFF8\r\n700F80000001E0000000000000301C7FFFFFF8\r\n700F80000001E000000000000038387FFFFFF8\r\n700F80000001E00000000000000FF07FFFFFF8\r\n700F80000001E000000000000000007FFFFFF8\r\n700F80000003E000000000000000007FFFFFF8\r\n700F80000003E000000000000000007FFFFFF8\r\n700FC0000003C0000700007F0000007FFFFFF8\r\n7007C0000007C000070001FFC020087FFFFFF8\r\n7007E000000FC00FFFE003FFE033187FFFFFF8\r\n7003F000001F800FFFE007FFF033187FFFFFF8\r\n7001F800003F000FFFE00FC1F033187FFFFFF8\r\n7000FC00007F000FFFE00F00783B987FFFFFF8\r\n70007F0001FE000F07000F00783FF87FFFFFF8\r\n70003FE00FFC000F87000F007830007FFFFFF8\r\n70001FFFFFF00007E7000F00F830007FFFFFF8\r\n70000FFFFFE00001FF000FE3F030007FFFFFF8\r\n700003FFFF800000FF0007FFF03FF87FFFFFF8\r\n7000007FFE0000003F0003FFE038007FFFFFF8\r\n70000007C00060001F0001FFC030007FFFFFF8\r\n700000000003E0000700003E0030007FFFFFF8\r\n70000000000FE000000000000000007FFFFFF8\r\n70000000007FE000FE00007F003FF87FFFFFF8\r\n7000000003FFE003FF8001FFC000F87FFFFFF8\r\n700000001FFF8007FFC003FFE001E07FFFFFF8\r\n700000007FFC000FFFE007FFF007807FFFFFF8\r\n70000003FFE0000F83F00FC1F03E007FFFFFF8\r\n7000001FFF80001F00F00F00783FF87FFFFFF8\r\n7000007FFF00001E00F00F007800007FFFFFF8\r\n700003FFFF00001E00F00F007820087FFFFFF8\r\n70001FFF1F00001F01F00F80F033187FFFFFF8\r\n70007FF81F00000FEFE00FF7F033187FFFFFF8\r\n7003FFC01F00000FFFE007FFF033187FFFFFF8\r\n701FFF001F000007FFC003FFE03B987FFFFFF8\r\n701FFE001F000001FF8001FF803FF87FFFFFF8\r\n7003FFC01F0000007C00003E0000007FFFFFF8\r\n7000FFF01F000000000000000000007FFFFFF8\r\n70001FFE1F000000FF000000003FF87FFFFFF8\r\n700003FFDF000003FF8001C7E03E007FFFFFF8\r\n700000FFFF000007FFE007E7F007F07FFFFFF8\r\n7000001FFF00000FFFE007FFF000F87FFFFFF8\r\n70000003FFC0000F83F00FFFF00FE07FFFFFF8\r\n70000000FFF8001E00F00E3C783E007FFFFFF8\r\n700000001FFE001E00F00E3C783FF87FFFFFF8\r\n7000000007FFC01E00F00E3C7800007FFFFFF8\r\n7000000000FFE00F01F00FFEF00FE07FFFFFF8\r\n70000000001FE00FFFE007FFF01EF87FFFFFF8\r\n700000000007E00FFFE007FFF030187FFFFFF8\r\n700000000000E007FFC003E7E0301C7FFFFFF8\r\n7000000003800001FF800003C0301C7FFFFFF8\r\n700000003FF80000380000000038387FFFFFF8\r\n7000E0007FFC000000000000001FF07FFFFFF8\r\n7001F000FFFF0000070000FF8000007FFFFFF8\r\n7003F801FFFF8000070003FFC000F07FFFFFF8\r\n7007F003F81FC00FFFE007FFE039F87FFFFFF8\r\n700FC003E007C00FFFE007FFF0339C7FFFFFF8\r\n700F8007C003E00FFFE00F81F0338C7FFFFFF8\r\n700F800FC003E00FFFE00F007837187FFFFFF8\r\n700F800F8001E00F07000F00781E787FFFFFF8\r\n700F801F8001E00FC7000F007800007FFFFFF8\r\n700F801F0001E003E7000F80F040007FFFFFF8\r\n700F803F0001E001FF0007FFF018007FFFFFF8\r\n700FC03E0003E0007F0007FFE0F0007FFFFFF8\r\n7007E07C0003E0003F0003FFE030007FFFFFF8\r\n7007FFFC000FC0000F0000FF8040007FFFFFF8\r\n7003FFF8003FC000030000080040007FFFFFF8\r\n7000FFF000FF8000000000000000007FFFFFF8\r\n70007FE000FF0000000000000000007FFFFFF8\r\n70001F0000FE0000000000080000007FFFFFF8\r\n70000000007800000000000E0000007FFFFFF8\r\n70000000000000000000003C0000007FFFFFF8\r\n70000000000000000000000E0000007FFFFFF8\r\n7000000000000000000000080000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7000000000000000000000000000007FFFFFF8\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF8\r\n00000000000000000000000000000000000000\r\n~DG13008550,14194,47,\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n000000000000000000000000000000000000000000000002000000001FFFFF00000000000000000000000000000000\r\n000000000000000000000000000000000000000000000007FE00000FFFFFFFF0000000000000000000000000000000\r\n00000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFE000000000000000000000000000000\r\n00000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFC00000000000000000000000000000\r\n00000000000000000000000000000000000000000000001FFFFFFFFFFFFFFFFFF00000000000000000000000000000\r\n00000000000000000000000000000000000000000000003FFFFFFFFFFFFFFFFFFC0000000000000000000000000000\r\n00000000000000000000000000000000000000000000003FFFFFFFFFFFFFFFFFFE0000000000000000000000000000\r\n00000000000000000000000000000000000000000000007FFFFFFFFFFFFFFFFFFF8000000000000000000000000000\r\n0000000000000000000000000000000000000000000000FFFFFFFFFFFFFFFFFFFFC000000000000000000000000000\r\n00000000000000000003C0000000000000000000000000FFFFFFFFFFFFFFFFFFFFE0000007FFF80000000000000000\r\n00000000000000000007E0000000000000000000000001FFFFFFFFFFF00001FFFFF800007FFFFFC000000000000000\r\n0000000000000000000FF0000000000000000000000003FF81FFFFF80000001FFFFC0003FFFFFFFC00000000000000\r\n0000000000000000001FF0000000000000000000000003FF0000000000000003FFFE000FFFFFFFFF80000000000000\r\n0000000000000000001FF8000000000000000000000007FF0000000000000000FFFF003FFFFFFFFFF0000000000000\r\n0000000000000000003FFC000000000000000000000007FE00000000000000003FFF807FFFFFFFFFFE000000000000\r\n0000000000000000003FFC00000000000000000000000FFC00000000000000000FFFC1FFFFFFFFFFFFC00000000000\r\n0000000000000000007FFE00000000000000000000001FFC000000000000000007FFE3FFFFFFFFFFFFF00000000000\r\n0000000000000000007FFE00000000000000000000001FF8000000000000000001FFF7FFFFFFFFFFFFFC0000000000\r\n000000000000000000FFFF00000000000000000000003FF0000000000000000000FFFFFFFFFFFFFFFFFF0000000000\r\n000000000000000001FFFF00000000000000000000007FF00000000000000000007FFFFFFC000FFFFFFFE000000000\r\n000000000000000001FFFF80000000000000000000007FE00000000000000000003FFFFFC000007FFFFFF800000000\r\n000000000000000003FFFFC000000000000000000000FFC00000000000000000001FFFFF00000007FFFFFF00000000\r\n000000000000000003FFFFC000000000000000000001FFC00000000000000000000FFFFC00000000FFFFFFE0000000\r\n000000000000000007FE7FE000000000000000000001FF8000000000000000000007FFF0000000001FFFFFFF000000\r\n000000000000000007FE7FE000000000000000000003FF0000000000000000000003FFE00000000003FFFFFFFF0000\r\n00000000000000000FFC3FF000000000000000000007FF0000000000000000000001FFC00000000000FFFFFFFFFC00\r\n00000000000000001FF83FF800000000000000000007FE0000000000000000000001FF8000000000003FFFFFFFFE00\r\n00000000000000001FF81FF80000000000000000000FFC0000000000000000000001FF80000000000007FFFFFFFE00\r\n00000000000000003FF00FFC0000000000000000001FFC0000000000000000000003FF00000000000001FFFFFFFF00\r\n00000000000000003FF00FFC0000000000000000001FF80000000000000000000003FE000000000000007FFFFFFF00\r\n00000000000000007FE007FE0000000000000000003FF80000000000000000000007FE000000000000000FFFFFFF80\r\n00000000000000007FE007FE0000000000000000003FF00000000000000000000007FC0000000000000003FFFFFF80\r\n0000000000000000FFC003FF0000000000000000007FE0000000000000000000000FFC00000000000000003FFFFFC0\r\n0000000000000001FF8003FF800000000000000000FFE0000000000000000000000FF8000000000000000001FFFFC0\r\n0000000000000001FF8001FF800000000000000000FFC0000000000000000000001FF800000000000000000007FFE0\r\n0000000000000003FF0000FFC00000000000000001FF800003F8000000000000001FF000000001000000000007FFF0\r\n0000000000000003FF0000FFC00000000000000003FF80001FFE000000000000003FF00000003FF8000000000FFFF0\r\n0000000000000007FE00007FE00000000000000003FF00003FFF000000000000003FE0000000FFFE000000000FFFF8\r\n000000000000000FFE00007FE00000000000000007FE00007FFF800000000000007FE0000001FFFF000000001FFFF8\r\n000000000000000FFC00003FF0000000000000000FFE0000FFFFC00000000000007FC0000003FFFF800000001FFFFC\r\n000000000000001FF800001FF8000000000000000FFC0001FFFFE0000000000000FFC0000007FFFFC00000003FE7FC\r\n000000000000001FF800001FF8000000000000001FF80001FFFFF0000000000000FF8000000FFFFFE00000003FE7FE\r\n000000000000003FF000000FFC000000000000003FF800001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE00000007FC3FF\r\n000000000000003FF000000FFC000000000000003FF0000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF00000007FC3FF\r\n000000000000007FE0000007FE000000000000007FE0000001FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000FF83FE\r\n00000000000000FFE0000007FE00000000000000FFE0000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000FF83FE\r\n00000000000000FFC0000003FF00000000000000FFC0000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFE7F0000001FF87FC\r\n00000000000001FF80000001FF80000000000001FF800000007FFFFFFFFFFFFFFFFFFFFFFFFFFF80F8000001FF07FC\r\n00000000000001FF80000001FF80000000000003FF800000003FFFFFFFFFFFFFFFFFFFFFFFFFFF0038000001FF0FF8\r\n00000000000003FF00000000FFC0000000000003FF000000003FFFFFFFFFFFFFFFFFFFFFFFFFFE0008000003FE0FF8\r\n00000000000003FF00000000FFC0000000000007FF000000001FFFFFFFFFFFFFFFFFFFFFFFFFFC0000000003FE1FF8\r\n00000000000007FE000000007FE0000000000007FE000000001FFFFFFFFFFFFFFFFFFFFFFFFFFC0000000007FC1FF0\r\n0000000000000FFC000000007FE000000000000FFC000008003FFFFFFFFFFFFFFFFFFFFFFFFFFE0000000007FC1FF0\r\n0000000000000FFC000000003FF000000000001FFC00000E00FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000FF83FE0\r\n0000000000001FF8000000001FF800000000001FF800000F81FFFFFFFFFFFFFFFFFFFFFFFFFFFF000000000FF83FE0\r\n0000000000001FF8000200001FF800000000003FF000000FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000001FF07FC0\r\n0000000000003FF0000600000FFC00000000007FF0000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFF800000001FF07FC0\r\n0000000000003FF0000700000FFC00000000007FE0000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000003FF0FF80\r\n0000000000007FE00007000007FE0000000000FFC0000007FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE00000003FE0FF80\r\n000000000000FFC00007800003FF0000000001FFC0000003FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE0000003FE1FF00\r\n000000000000FFC0000FC00003FF0000000001FF80000003FFFFF00000000003FE0000000003FFFFC000007FC1FF00\r\n000000000001FF80000FC00001FF8000000003FF00000001FFFFF00000000007FE0000000003FFFFC000007FC3FF00\r\n000000000001FF80000FE00001FF8000000007FF00000000FFFFE00000000007FC0000000001FFFF800000FF83FE00\r\n000000000003FF00000FF00000FFC000000007FE000000007FFFC0000000000FFC0000000000FFFF000000FF83FE00\r\n000000000003FF00030FF80000FFC00000000FFC000000003FFF00000000000FF800000000007FFE000001FF07FC00\r\n000000000007FE00038FF800007FE00000001FFC000000000FFC00000000001FF800000000003FF8000001FF07FC00\r\n00000000000FFC0003CFFC00003FF00000001FF800000000000000000000003FF0000000000007E0000003FE0FF800\r\n00000000000FFC0001EFFEC0003FF00000003FF800000000000000000000003FE000000000000000000003FE0FF800\r\n00000000001FF80001FFFFE0001FF80000003FF000000000000000000000007FE000000000000000000007FE1FF000\r\n00000000001FF80001FFFFF0001FF80000007FE000000000000000000000007FC000000000000000000007FC1FF000\r\n00000000003FF00001FFFFF0000FFC000000FFE00000000000000000000000FFC000000000000000000007FC3FE000\r\n00000000003FE00001FFFFF8000FFC000000FFC00000000000000000000000FF800000000000000000000FF83FE000\r\n00000000007FE00003FFFFF80007FE000001FF800000000000000000000001FF800000000000000000000FF87FC000\r\n0000000000FFC00003FFFFF80003FF000003FF800000000000000000000001FF000000000000000000001FF07FC000\r\n0000000000FFC00003FFFFFC0003FF000003FF000000000000000000000003FF000000000000000000001FF0FFC000\r\n0000000001FF800003FFFFFC0001FF800007FE0000001FFFFC000000000003FE000000000000000000003FE0FF8000\r\n0000000001FF8000C3FFFFFC0001FF80000FFFF0001FFFFFFFE00000000007FE000000000000000000003FE0FF8000\r\n0000000003FF0000E3FFFFFE0000FFC0000FFFFFFFFFFFFFFFFC0000000007FC000000000000000000007FC1FF0000\r\n0000000007FE0000F3FFFFFE00007FC0000FFFFFFFFFFFFFFFFF800000000FFC000000000000000000007FC1FF0000\r\n0000000007FE0000FBFFFFFE00007FE0000FFFFFFFFFFFFFFFFFF00000000FF800000000000000000000FF83FE0000\r\n000000000FFC0000FFFFFFFE60003FF0000FFFFFFFFFFFFFFFFFFC0000001FF800000000000000000000FF83FE0000\r\n000000000FFC0000FFFFFFFEF0003FF0000FFFFFFFFFFFFFFFFFFF0000001FF000000000000000000001FF87FC0000\r\n000000001FF80001FFFFFFFFF0001FF8001FFFFFFFFFFFFFFFFFFFC000003FF000000000000000000001FF07FC0000\r\n000000001FF80001FFFFFFFFF0001FF8001FFFFFFFFFFFFFFFFFFFE000003FE000000000000000000001FF0FF80000\r\n000000003FF00001FFFFFFFFF0000FFC001FFFFFFFFFFFFFFFFFFFF800007FE000000000000000000003FE0FF80000\r\n000000007FE00001FFFFFFFFF80007FC001FFFFFFFFFF00007FFFFFC0000FFC000000000000000000003FE1FF80000\r\n000000007FE00001FFFF9FFFF80007FE001FE01FFFF00000003FFFFF0000FF8000000000000000000007FC1FF00000\r\n00000000FFC00003FFFF9FFFF80003FF001FE000000000000007FFFF8001FF8000000000000000000007FC1FF00000\r\n00000000FFC00003FFFF8FFFF80003FF001FE000000000000000FFFFC001FF00000E000000000000000FF83FE00000\r\n00000001FF800033FFFF8FFFF80001FF801FE0000000000000003FFFE003FF000FFFFE0000000000000FF83FE00000\r\n00000001FF00003FFFFF87FFF80001FF801FE0000000000000000FFFF003FE01FFFFFFC000000000001FF07FC00000\r\n00000003FF00003FFFFF87FFF00000FFC01FFF00003FFFFFF00003FFF807FE0FFFFFFFF800000000001FF07FC00000\r\n00000007FE00003FFFFF87FFF000007FE01FFFFFFFFFFFFFFF8000FFFC07FC7FFFFFFFFF00000000003FF0FF800000\r\n00000007FE00003FFFFF87FFF000007FE01FFFFFFFFFFFFFFFF0007FFF0FFDFFFFFFFFFFC0000000003FE0FF800000\r\n0000000FFC00003FFFFF83FFF000003FF01FFFFFFFFFFFFFFFFC001FFFFFFFFFFFFFFFFFF0000000003FE1FF000000\r\n0000000FFC00003FFFFF83FFF000003FF01FFFFFFFFFFFFFFFFF000FFFFFFFFFFFFFFFFFFC000000007FC1FF000000\r\n0000001FF800003FFFFF83FFF000001FF81FFFFFFFFFFFFFFFFFC007FFFFFFFFFFFFFFFFFF000000007FC3FE000000\r\n0000001FF000003FFFFF83FFF000001FF81FFFFFFFFFFFFFFFFFF003FFFFFFFFFFFFFFFFFF80000000FF83FE000000\r\n0000003FF000003FFBFF83BFFC00000FFC1FFFFFFFFFFFFFFFFFFC01FFFFFFFFFFFFFFFFFFE0000000FF87FE000000\r\n0000007FE000001FF9F7873FFC000007FE03FFFFFFFFFFFFFFFFFE007FFFFFFFF00003FFFFF8000001FF07FC000000\r\n0000007FE000001FF9F7063FFC000007FE007FFFFFFFFFFFFFFFFF807FFFFFFF0000007FFFFC000001FF07FC000000\r\n000000FFC000001FF9E3063FFE000003FF0001FFFFE000000FFFFFC03FFFFFF80000000FFFFE000003FE0FF8000000\r\n000000FFC000001FF9E0003FFE000003FF0000000000000001FFFFF01FFFFFE000000003FFFF800003FE0FF8000000\r\n000001FF8000001FF0F0003FFC000001FF80000000000000003FFFF803FFFF00000000007FFFC00007FE1FF0000000\r\n000001FF0000001FE0F0000FFC000000FF80000000000000000FFFFC000FFC00000000003FFFF00007FC1FF0000000\r\n000003FF0000001FE070000FFC000000FFC00000000000000003FFFE0000F000000000000FFFF8000FFC3FE0000000\r\n000007FE0000001FE060001FFC0000007FE00000000000000000FFFF000000000000000003FFFC000FF83FE0000000\r\n000007FE0000000FF000001FFC0000007FE000000000000000003FFFC00000000FFF800001FFFF000FF87FC0000000\r\n00000FFC0000000FF000003FF80000003FF000000000000000000FFFE0000003FFFFFC00007FFF801FF07FC0000000\r\n00000FFC0000000FF800003FF80000003FF0000000000000000007FFE000003FFFFFFF80003FFFE01FF0FFC0000000\r\n00001FF800000007F800007FF80000001FF8000000000000000001FFF80001FFFFFFFFF0000FFFF03FE0FF80000000\r\n00003FF000000007F80000FFF00000000FF8000000000000000000FFFFF807FFFFFFFFFC0007FFFC3FE0FF80000000\r\n00003FF000000007FC0001FFE00000000FFC0000000000000000007FFFFFFFFFFFFFFFFF0001FFFF7FC1FF00000000\r\n00007FE000000003FE0001FFE000000007FE0000000000000000003FFFFFFFFFFFFFFFFFC000FFFFFFC1FF00000000\r\n00007FE000000001FE0003FFC000000007FE0000000000000000000FFFFFFFFFFFFFFFFFF0003FFFFF83FE00000000\r\n0000FFC000000000FF000FFF0000000003FF00000000000000000007FFFFFFFFFFFFFFFFFC001FFFFF83FE00000000\r\n0000FF80000000007F801FFE0000000003FF00000000000000000003FFFFFFFFFFFFFFFFFF000FFFFF87FC00000000\r\n0001FF80000000003FC03FF80000000001FF80000000000000000001FFFFFFFFF8007FFFFFC003FFFF07FC00000000\r\n0003FF00000000000FE07FC00000000000FFC0000000000000000001FFFFFFFE000007FFFFF001FFFF0FF800000000\r\n0003FF0000000000000000000000000000FFC0000000000000000000FFFFFFF0000000FFFFF8007FFF0FF800000000\r\n0007FE00000000000000000000000000007FE00000000000000000000FFFFF800000003FFFFE003FFF1FF000000000\r\n0007FE00000000000000000000000000007FE0000000000000000000000FFC0000000007FFFF800FFF9FF000000000\r\n000FFC00000000000000000000000000003FF00000000000000000000000700000000001FFFFE001FFBFF000000000\r\n000FF80000003FFFFFFFFFFFFFFC0000001FF000000000000000000000000000000000007FFFF0007FFFE000000000\r\n001FF80000003FFFFFFFFFFFFFFC0000001FF800000000000000000000000000000000001FFFFC007FFFE000000000\r\n003FF00000003FFFFFFFFFFFFFFC0000000FFC000000000000000000000000000000000007FFFF007FFFC000000000\r\n003FF00000003FFFFFFFFFFFFFFC0000000FFC000000000000000000000000000000000003FFFFC03FFFC000000000\r\n007FE00000003FFFFFFFFFFFFFFC00000007FE000000000000000000000000000000000000FFFFF03FFF8000000000\r\n007FE00000003FFFFFFFFFFFFFFC00000007FE0000000000000000000000000000000000003FFFFE1FFF8000000000\r\n00FFC00000001FFFFFFFFFFFFFFC00000003FF0000000000000000000000000000000000000FFFFFDFFF0000000000\r\n00FF80000000000000000000000000000001FF00000000000000000000000000000000000007FFFFFFFF0000000000\r\n01FF80000000000000000000000000000001FF80000000000000000000000000000000000001FFFFFFFE0000000000\r\n03FF00000000000000000000000000000000FFC00000000000000000000000000000000000007FFFFFFE0000000000\r\n03FF00000000000000000000000000000000FFC00000000000000000000000000000000000001FFFFFFE0000000000\r\n07FE000000000000000000000000000000007FE00000000000000000000000000000000000000FFFFFFC0000000000\r\n07FC000000000000000000000000000000007FE000000000000000000000000000000000000003FFFFFC0000000000\r\n0FFC000000000000000000000000000000003FF0000000000000000000000000000000000000007FFFF80000000000\r\n0FF8000000000000000000000000000000001FF0000000000000000000000000000000000000001FFFF80000000000\r\n1FF8000000000000000000000000000000001FF80000000000000000000000000000000000000007FFF00000000000\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC00000000000000000000000000000000000000007FF00000000000\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC000000000000000000000000000000000000000000000000000000\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000000000000000000000000000000000000000000000000000\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000000000000000000000000000000000000000000000000000\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000000000000000000000000000000000000000000000000000\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000000000000000000000000000000000000000000000000000\r\n7FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFE000000000000000000000000000000000000000000000000000000\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC000000000000000000000000000000000000000000000000000000\r\n0FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF0000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n0000000000001FF8000000000001FF8000000000000000000000000000000000000000000000000000000000000000\r\n00000000007FFFFFFE00000007FFFFFFE0000000000000000000000000000000000000000000000000000000000000\r\n000000001FFFFFFFFFF80001FFFFFFFFFF800000000000000000000000000000000000000000000000000000000000\r\n000000003FFFFFFFFFFF801FFFFFFFFFFFC000000000000000000000000007FFF80000FFFF00000000000000000000\r\n000000003FFFFFFFFFFFF0FFFFFFFFFFFFC00000000000000000000000003FFFFF8007FFFFF0000000000000000000\r\n000000003FFFFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000001FFFFFFF03FFFFFFE000000000000000000\r\n000000003FFFFFFFFFFFFFFFFFFFFFFFFFC0000000000000000000000007FFFFFFFCFFFFFFFF800000000000000000\r\n000000003FE0000003FFFFFFFC0000003FC000000000000000000000001FFFFFFFFFFFFFFFFFE00000000000000000\r\n000000003F000000001FFFFF800000000FC000000000000000000000007FFFFFFFFFFFFFFFFFF80000000000000000\r\n000000003F0000000001FFF8000000000FC00000000000000000000001FFFFFFFFFFFFFFFFFFFE0000000000000000\r\n000000003F00000000003FC0000000000FC00000000000000000000007FFFC000FFFFF8001FFFF0000000000000000\r\n000000003F00000000001F80000000000FC0000000000000000000001FFFE00000FFFC00001FFFC000000000000000\r\n000000003F00000000001F80000000000FC0000000000000000000007FFF8000003FF0000007FFF000000000000000\r\n000000003F00000000001F80000000000FC000000001800000000001FFFE0000001FC0000001FFFE00000000000600\r\n000000003F00000000001F80000000000FC000000001F0000000000FFFF80000001FC00000007FFF80000000003E00\r\n00003FFFFF00000000001F80000000000FFFFFC00001FE000000007FFFE00000001FC00000001FFFF000000003FE00\r\n00003FFFFF00000000001F80000000000FFFFFC00001FFE0000007FFFF800000001FC000000007FFFF8000003FFE00\r\n00003FFFFF00000000001F80000000000FFFFFC00001FFFFC007FFFFFE000000001FC000000001FFFFFF000FFFFE00\r\n00003FFFFF00000000001F80000000000FFFFFC00001FFFFFFFFFFFFF8000000001FC0000000007FFFFFFFFFFFFE00\r\n00003FFFFF00000000001F80000000000FFFFFC00001FFFFFFFFFFFFE0000000001FC0000000001FFFFFFFFFFFFE00\r\n00003FFFFF00000000001F80000000000FFFFFC00001FFFFFFFFFFFF00000000001FC00000000007FFFFFFFFFFFE00\r\n00003F807F00000000001F80000000000FE01FC00001FFFFFFFFFFFC00000000001FC00000000000FFFFFFFFFFFE00\r\n00003F003F00000000001F80000000000FC00FC00001FFFFFFFFFFC000000000001FC000000000001FFFFFFFFFFE00\r\n00003F003F00000000001F80000000000FC00FC00001FC1FFFFFFC0000000000001FC0000000000000FFFFFFE1FE00\r\n00003F003F00000000001F80000000000FC00FC00001FC007FFC000000000000001FC000000000000000FFF001FE00\r\n00003F003F00000000001F80000000000FC00FC00001FC000000000000000000001FC000000000000000000001FE00\r\n00003F003F00000000001F80000000000FC00FC00001FC000000000000000000001FC000000000000000000001FE00\r\n00003F003F00000000001F80000000000FC00FC00001FC000000000000000000001FC000000000000000000001FE00\r\n1FFFFF003F00000000001F80000000000FC00FFFFFC1FC000000000000000000001FC000000000000000000001FE00\r\n3FFFFF003F00000000001F80000000000FC00FFFFFC1FC000000000000000000001FC000000000000000000001FE00\r\n3FFFFF003F00000000001F80000000000FC00FFFFFC1FC000000000000000000001FC000000000000000000001FE00\r\n3FFFFF003F00000000001F80000000000FC00FFFFFC1FC000000000000000000001FC000000000000000000001FE00\r\n3FFFFF003F00000000001F80000000000FC00FFFFFC1FC000000000000000000001FC000000000000000000001FE00\r\n3FFFFF003F00000000001F80000000000FC00FFFFFC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FE01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC0000000001FE000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC0000000007FF800000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000FFFC00000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000001FFFE00000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000003FFFF00000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000007FFFF80000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000007FFFF80000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000000FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000007FFFF80000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000007FFFF80000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000003FFFF00000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000001FFFE00000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000FFFC00000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC0000000003FF000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000030000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000003FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000007FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000007FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000007FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000007FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000007FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000007FFFFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC00000001FFFFFC0000001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003F00000000001F80000000000FC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003F0FFFFFFE001F8007FFFFFF8FC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003FFFFFFFFFF81F81FFFFFFFFFFC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003FFFFFFFFFFF9F9FFFFFFFFFFFC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003FFFFFFFFFFFFFFFFFFFFFFFFFC00FC01FC1FC000000000000000000001FC000003FFFFFFFFFF00001FE00\r\n3F803F003FFFFFFFFFFFFFFFFFFFFFFFFFC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003FFFFFFFFFFFFFFFFFFFFFFFFFC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003FF8000007FFFFFFFE000001FFC00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F003C000000001FFFFF8000000003C00FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F00000000000000FFF80000000000000FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F000000000000001F800000000000000FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F0000000000000000000000000000000FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F00007FFFFFFC00000003FFFFFFE0000FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F001FFFFFFFFFF00000FFFFFFFFFF800FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F01FFFFFFFFFFFF801FFFFFFFFFFFF80FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803F1FFFFFFFFFFFFFF9FFFFFFFFFFFFFF8FC01FC1FC000000000000000000001FC000000000000000000001FE00\r\n3F803FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC01FC1FC0000000000000003FFF81FC0FFFF0000000000000001FE00\r\n3F803FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC01FC1FC000000000000003FFFFFDFCFFFFFF000000000000001FE00\r\n3F803FFFFFE000000FFFFFFFFF0000007FFFFFC01FC1FC00000000000001FFFFFFFFFFFFFFFE00000000000001FE00\r\n3F803FFFF8000000001FFFFF8000000000FFFFC01FC1FC00000000000007FFFFFFFFFFFFFFFF80000000000001FE00\r\n3F803FFF000000000000FFF000000000000FFFC01FC1FC0000000000003FFFFFFFFFFFFFFFFFE0000000000001FE00\r\n3F803FF00000000000000F80000000000000FFC01FC1FC000000000000FFFFFFFFFFFFFFFFFFF8000000000001FE00\r\n3F803F8000000000000000000000000000001FC01FC1FC000000000001FFFFFFFFFFFFFFFFFFFE000000000001FE00\r\n3F803E00000000000000000000000000000003C01FC1FC000000000007FFFE0007FFFF8001FFFF800000000001FE00\r\n3F803000000000000000000000000000000000C01FC1FC00000000001FFFE00000FFF800001FFFE00000000001FE00\r\n3F800000000000000000000000000000000000001FC1FC00000000007FFF0000001FE0000007FFF80000000001FE00\r\n3F800000000000000000000000000000000000001FC1FC0000000001FFFC0000000F80000001FFFE0000000001FE00\r\n3F800000000000000000000000000000000000001FC1FC000000000FFFF000000003000000007FFF8000000001FE00\r\n3F800000000000000000000000000000000000001FC1FE000000003FFFC000000000000000001FFFF000000001FE00\r\n3F800000000000000000000000000000000000001FC1FFC0000003FFFF00000000000000000007FFFE0000000FFE00\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1FFFF00007FFFFE00000000000000000001FFFFF00003FFFE00\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1FFFFFFFFFFFFF8000000000000000000007FFFFFFFFFFFFE00\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC1FFFFFFFFFFFFE0000000000000000000001FFFFFFFFFFFFE00\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC0FFFFFFFFFFFF000000000000000000000007FFFFFFFFFFFC00\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC03FFFFFFFFFFC000000000000000000000000FFFFFFFFFFF000\r\n3FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFC007FFFFFFFFE00000000000000000000000001FFFFFFFFF8000\r\n00000000000000000000000000000000000000000000007FFFFFFE0000000000000000000000000003FFFFFFF00000\r\n000000000000000000000000000000000000000000000001FFFFC000000000000000000000000000001FFFFE000000\r\n0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\r\n"""
    
    def __init__(self,
                 serial_port: str = None,
                 scanner_port: str = None,
                 baud_rate: int = 9600,
                 scanner_baud_rate: int = 9600,
                 csv_file: str = None,
                 org_code: str = 'NW7',
                 api_serial_url: str = "http://150.150.251.243:3000/api/prod/serialnumberinfo/get",
                 api_workorder_url: str = "http://150.150.251.243:3000/api/prod/labelworkorder/get") -> None:
        
        # Inicializa os locks antes de qualquer operação
        self.lock_file = threading.Lock()
        self.lock_csv = threading.Lock()
        self.lock_printed_serials = threading.Lock()
        # Carrega dados de configuração a partir do arquivo config.json
        config_path = resource_path("config.json")
        if os.path.exists(config_path):
            try:
                with open(config_path, "r", encoding="utf-8") as config_file:
                    config = json.load(config_file)
            except Exception as ex:
                logging.error(f"Erro ao carregar config.json: {ex}")
                config = {}
        else:
            config = {}

        # Leia a porta serial e a porta do scanner também do config.json
        if serial_port is None:
            serial_port = config.get("serial_port", "COM12")
        if scanner_port is None:
            scanner_port = config.get("scanner_port", "COM6")

        # Leia os baud rates do config.json, definindo 9600 como valor padrão
        baud_rate = config.get("baud_rate", baud_rate)
        scanner_baud_rate = config.get("scanner_baud_rate", scanner_baud_rate)

        # Caso não exista caminho CSV informado, use um arquivo CSV padrão
        if csv_file is None:
            csv_file = "impressoes.csv"

        self.theme = config.get("theme", "light")
        # Aqui lemos o zpl_scale e outras configurações
        self.zpl_scale = config.get("zpl_scale", 2)
        self.novo_darkness = config.get("novo_darkness", 10)
        self.desired_move_x = config.get("desired_move_x", 36)
        self.desired_move_y = config.get("desired_move_y", 0)

        self.label_type_for_workorder = config.get("label_type_for_workorder")

        # Atribuindo finalmente para nosso objeto
        self.serial_port = serial_port
        self.scanner_port = scanner_port
        self.baud_rate = baud_rate
        self.scanner_baud_rate = scanner_baud_rate
        self.csv_file = resource_path(csv_file)
        self.org_code = org_code
        self.api_serial_url = api_serial_url
        self.api_workorder_url = api_workorder_url
        self.session = configure_session_with_retries()

        # Caches em memória
        self.workorder_cache: Dict[str, Any] = {}
        self.workorder_count: Dict[str, int] = {}
        self.printed_serials: Set[str] = set()
        self.api1_cache: Dict[str, Tuple[str, str]] = {}
        self.images_printed: Set[str] = set()

        # Caminhos para arquivos de cache
        self.api1_cache_file = resource_path("api1_cache.json")
        self.workorder_cache_file = resource_path("workorder_cache.json")
        self.printed_serials_file = resource_path("printed_serials.json")

        # Pré-carrega do dia as workorders na API de WO e grava no workorder_cache.json
        self.preload_workorder_cache_from_daily_api()

        # Carrega caches (se existirem)
        self._load_api1_cache()
        self._load_workorder_cache()
        self._load_printed_serials()

        # Pré-carrega imagem padrão na impressora
        self._preload_standard_image()

        # Inicializa fila de impressão e locks para acesso thread-safe
        self.print_queue = Queue()
        self.lock_file = threading.Lock()
        self.lock_csv = threading.Lock()
        self.lock_printed_serials = threading.Lock()
        self._start_print_worker()

    def _start_print_worker(self) -> None:
        """Inicia a thread que fica responsável por processar os jobs de impressão."""
        self.print_worker = threading.Thread(target=self._print_worker, daemon=True)
        self.print_worker.start()

    def _print_worker(self) -> None:
        """
        Worker de impressão: fica em loop aguardando jobs na fila.
        Cada job deve conter (no mínimo) o comando ZPL, dados do registro e informações do serial.
        Ao enviar o comando para a impressora, o worker aguarda a confirmação e registra os dados.
        """
        while True:
            job = self.print_queue.get()
            if job is None:
                break
            try:
                if not self.is_printer_ready():
                    logging.warning("A impressora não está pronta para impressão. Re-enfileirando o job.")
                    self.print_queue.put(job)
                    time.sleep(1)
                    continue
                logging.info("Enviando comando ZPL para impressão (job enfileirado).")
                with serial.Serial(self.serial_port, self.baud_rate, timeout=2) as printer:
                    printer.write(job["zpl"].encode())
                    printer.flush()
                time.sleep(0.5)  # Aguarda brevemente para assegurar o envio completo
                if self._check_printing_status():
                    logging.info("Impressão confirmada para serial: %s", job["serial_number"])
                    serial_no = job["registro"].get("SerialNo", "")
                    with self.lock_csv:
                        self.save_to_csv(job["serial_number"],
                                         job["workorder_code_api1"],
                                         job["model_suffix_api1"],
                                         serial_no)
                    with self.lock_printed_serials:
                        self.printed_serials.add(job["serial_number"])
                        self._append_printed_serial(job["serial_number"],
                                                    job["model_suffix_api1"],
                                                    serial_no)
                else:
                    logging.warning("A impressão não foi confirmada para serial: %s", job["serial_number"])
            except Exception as e:
                logging.error("Erro no worker de impressão: %s", e)
            finally:
                self.print_queue.task_done()

    def preload_workorder_cache_from_daily_api(self) -> None:
        """
        Consulta a API de WO para obter as WorkOrderCode do dia atual e, para cada uma,
        consulta a API de workorder para obter os dados completos, gravando-os em workorder_cache.json.
        """
        logging.info("Carregando WorkOrders do dia atual da API de WO...")
        try:
            current_date = datetime.now().strftime("%Y-%m-%d")
            url = "http://150.150.251.243:3000/api/prod/wo/get"
            params = {
                "parameters.orgCode": self.org_code,
                "parameters.fromScheduleDate": current_date,
                "parameters.toScheduleDate": current_date
            }
            response = self.session.get(url, params=params, timeout=60)
            response.raise_for_status()
            data = response.json()
            if not isinstance(data, list):
                logging.error("Formato inesperado dos dados da API de WO.")
                return

            filtered = [
                record for record in data
                if record.get("LineCode") == "AA1" and record.get("StatusTypeDesc") == "Released"
            ]
            work_order_codes = [
                record.get("WorkOrderCode") for record in filtered if record.get("WorkOrderCode")
            ]
            logging.info("WorkOrderCodes encontrados: %s", work_order_codes)

            cached_workorder_codes = set()
            if os.path.isfile(self.workorder_cache_file):
                try:
                    with open(self.workorder_cache_file, mode='r', encoding='utf-8') as f:
                        cached_data = json.load(f)
                        if isinstance(cached_data, list):
                            for entry in cached_data:
                                workorder = entry.get("workorder")
                                if workorder:
                                    cached_workorder_codes.add(workorder)
                except Exception as ex:
                    logging.error("Erro ao ler o arquivo %s: %s", self.workorder_cache_file, ex)

            if set(work_order_codes).issubset(cached_workorder_codes) and len(cached_workorder_codes) > 0:
                logging.info("Arquivo workorder_cache.json já possui todas as work orders necessárias. Pulando pré-carregamento.")
                return

            for workorder_code in work_order_codes:
                if workorder_code in self.workorder_cache:
                    logging.info("WorkOrder %s já possui dados no cache, pulando.", workorder_code)
                    continue

                params_label = {
                    "parameters.orgCode": self.org_code,
                    "parameters.workOrderCode": workorder_code,
                    "parameters.labelType": self.label_type_for_workorder
                }
                workorder_data = self._get_json(self.api_workorder_url, params_label)
                if workorder_data is None:
                    logging.warning("Nenhum dado retornado para WorkOrderCode: %s", workorder_code)
                else:
                    self.workorder_cache[workorder_code] = workorder_data
                    if isinstance(workorder_data, list):
                        self.workorder_count[workorder_code] = len(workorder_data)
                    self._append_to_json_file(self.workorder_cache_file, {
                        "workorder": workorder_code,
                        "data": workorder_data
                    })
                    logging.info("WorkOrder %s carregada com sucesso.", workorder_code)
                
                time.sleep(1)  # Delay para evitar sobrecarga na API...
        except Exception as ex:
            logging.error("Erro ao carregar WorkOrders da API: %s", ex)

    def _preload_standard_image(self) -> None:
        """
        Pré-carrega a imagem padrão na impressora para agilizar impressões futuras.
        """
        logging.info("Pré-carregando a imagem padrão no cache da impressora...")
        try:
            self.print_zpl(self.STANDARD_IMAGE_ZPL)
            logging.info("Imagem padrão pré-carregada com sucesso.")
        except Exception as ex:
            logging.error(f"Erro ao pré-carregar a imagem padrão: {ex}")

    def _load_api1_cache(self) -> None:
        if os.path.isfile(self.api1_cache_file):
            try:
                with open(self.api1_cache_file, mode='r', encoding='utf-8') as f:
                    data = json.load(f)
                    if isinstance(data, list):
                        for entry in data:
                            workorder = entry.get("workorder")
                            workorder_code = entry.get("WorkOrderCode", "")
                            model_suffix = entry.get("ModelSuffix", "")
                            if workorder:
                                self.api1_cache[workorder] = (workorder_code, model_suffix)
                logging.info("Cache API1 carregado com sucesso.")
            except Exception as ex:
                logging.error(f"Erro ao carregar cache API1: {ex}")

    def _load_workorder_cache(self) -> None:
        if os.path.isfile(self.workorder_cache_file):
            try:
                with open(self.workorder_cache_file, mode='r', encoding='utf-8') as f:
                    data = json.load(f)
                    if isinstance(data, list):
                        for entry in data:
                            workorder = entry.get("workorder")
                            workorder_data = entry.get("data")
                            if workorder and workorder_data:
                                self.workorder_cache[workorder] = workorder_data
                                if isinstance(workorder_data, list):
                                    self.workorder_count[workorder] = len(workorder_data)
                                else:
                                    self.workorder_count[workorder] = 1
                logging.info("Cache de workorders carregado com sucesso.")
            except Exception as ex:
                logging.error(f"Erro ao carregar cache de workorders: {ex}")

    def _load_printed_serials(self) -> None:
        if os.path.isfile(self.printed_serials_file):
            try:
                with open(self.printed_serials_file, mode='r', encoding='utf-8') as f:
                    data = json.load(f)
                    if isinstance(data, list):
                        for record in data:
                            if record.get("printed", False):
                                serial = record.get("serial")
                                if serial:
                                    self.printed_serials.add(serial)
                logging.info("Seriais impressos carregados com sucesso.")
            except Exception as ex:
                logging.error(f"Erro ao carregar os seriais impressos: {ex}")

    def _remove_images_from_data(self, data: Any) -> Any:
        """
        Remove a chave 'Images' ou 'images' dos dados.
        """
        if isinstance(data, list):
            for record in data:
                if isinstance(record, dict):
                    record.pop("Images", None)
                    record.pop("images", None)
        elif isinstance(data, dict):
            data.pop("Images", None)
            data.pop("images", None)
        return data

    def _append_to_json_file(self, file_path: str, data: dict) -> None:
        """
        Acrescenta uma nova entrada no arquivo JSON especificado, garantindo acesso thread-safe.
        """
        try:
            with self.lock_file:
                if file_path == self.workorder_cache_file and "data" in data:
                    data["data"] = self._remove_images_from_data(data["data"])
                if os.path.isfile(file_path):
                    with open(file_path, mode='r', encoding='utf-8') as f:
                        try:
                            existing_data = json.load(f)
                            if not isinstance(existing_data, list):
                                existing_data = []
                        except json.JSONDecodeError:
                            existing_data = []
                else:
                    existing_data = []
                if file_path == self.api1_cache_file:
                    for record in existing_data:
                        if record.get("workorder") == data.get("workorder"):
                            logging.info(f"Registro com workorder '{data.get('workorder')}' já existe em {file_path}.")
                            return
                existing_data.append(data)
                with open(file_path, mode='w', encoding='utf-8') as f:
                    json.dump(existing_data, f, indent=4)
        except Exception as ex:
            logging.error(f"Erro ao escrever no arquivo {file_path}: {ex}")

    def _append_printed_serial(self, serial_number: str, model_suffix: str, serial_no: str) -> None:
        """
        Adiciona o serial impresso ao arquivo printed_serials.json, de forma thread-safe.
        """
        try:
            with self.lock_file:
                if os.path.isfile(self.printed_serials_file):
                    with open(self.printed_serials_file, mode='r', encoding='utf-8') as f:
                        try:
                            records = json.load(f)
                            if not isinstance(records, list):
                                records = []
                        except json.JSONDecodeError:
                            records = []
                else:
                    records = []
                if not any(record.get("serial") == serial_number for record in records):
                    record = {
                        "serial": serial_number,
                        "printed": True,
                        "print_timestamp": datetime.now().isoformat(),
                        "ModelSuffix": model_suffix,
                        "SerialNo": serial_no
                    }
                    records.append(record)
                    with open(self.printed_serials_file, mode='w', encoding='utf-8') as f:
                        json.dump(records, f, indent=4)
                    logging.info(f"Serial {serial_number} registrada como impressa.")
        except Exception as ex:
            logging.error(f"Erro ao atualizar o arquivo de seriais impressos: {ex}")

    def consulta_api(self, serial_number: str) -> Tuple[str, str]:
        """
        Consulta a API de serial number e, se houver comando ZPL, envia-o para impressão.
        Retorna (WorkOrderCode, ModelSuffix).
        """
        params = {
            "parameters.serialNumber": serial_number,
            "parameters.labelType": "WIP"
        }
        data = self._get_json(self.api_serial_url, params)
        if data is None:
            return "", ""
        logging.info(f"Resposta da API Serial Number ({serial_number}): {data}")
        if isinstance(data, list) and data:
            item = data[0]
        elif isinstance(data, dict):
            item = data
        else:
            item = {}
        workorder_code = item.get("WorkOrderCode", "")
        model_suffix = item.get("ModelSuffix", "")
        zpl_code = item.get("ZPL", "")
        if zpl_code:
            logging.info("Imprimindo etiqueta da primeira API...")
            self.print_zpl(zpl_code)
        return workorder_code, model_suffix

    def _get_json(self, url: str, params: dict, max_attempts: int = 5, delay: int = 5) -> Any:
        """
        Executa um GET na URL e retorna o JSON da resposta, re-tentando em caso de erro ou timeout.
        """
        attempt = 0
        while attempt < max_attempts:
            try:
                response = self.session.get(url, params=params, timeout=60)
                response.raise_for_status()
                return response.json()
            except requests.exceptions.ReadTimeout as e:
                attempt += 1
                logging.warning(
                    f"Timeout na requisição a {url}. Tentativa {attempt}/{max_attempts}. Aguardando {delay} segundos..."
                )
                time.sleep(delay)
            except Exception as ex:
                attempt += 1
                logging.error(
                    f"Erro na requisição a {url}: {ex}. Tentativa {attempt}/{max_attempts}. Aguardando {delay} segundos..."
                )
                time.sleep(delay)
        logging.error(f"Falha ao carregar dados da API {url} após {max_attempts} tentativas.")
        return None

    def is_printer_ready(self) -> bool:
        try:
            with serial.Serial(self.serial_port, self.baud_rate, timeout=2) as printer:
                printer.reset_input_buffer()
                logging.info("Verificando status da impressora antes de enviar a impressão...")
                printer.write(b"~HS")
                time.sleep(0.2)
                
                response_lines = []
                for _ in range(3):
                    line = printer.readline()
                    if line:
                        response_lines.append(line)
                if len(response_lines) < 2:
                    logging.error("Resposta insuficiente da impressora para verificação de status.")
                    return False
                decoded_line1 = response_lines[0].decode('ascii', errors='replace')
                if decoded_line1.startswith('\x02'):
                    decoded_line1 = decoded_line1[1:]
                if '\x03' in decoded_line1:
                    decoded_line1 = decoded_line1.split('\x03')[0]
                decoded_line1 = decoded_line1.strip()
                fields1 = decoded_line1.split(',')
                if len(fields1) < 3:
                    logging.error("Formato inesperado na resposta de status (linha 1)!")
                    return False
                paper_flag = fields1[1] if len(fields1) > 1 else "0"
                pause_flag = fields1[2] if len(fields1) > 2 else "0"
                paper_status = "Papel OK" if paper_flag != "1" else "Falta de Papel"
                pause_status = "Pause (OFF)" if pause_flag != "1" else "Pause (ON)"
                decoded_line2 = response_lines[1].decode('ascii', errors='replace')
                if decoded_line2.startswith('\x02'):
                    decoded_line2 = decoded_line2[1:]
                if '\x03' in decoded_line2:
                    decoded_line2 = decoded_line2.split('\x03')[0]
                decoded_line2 = decoded_line2.strip()
                fields2 = decoded_line2.split(',')
                if len(fields2) < 4:
                    logging.error("Formato inesperado na resposta de status (linha 2)!")
                    return False
                ribbon_flag = fields2[3] if len(fields2) > 3 else "0"
                ribbon_status = "Ribbon OK" if ribbon_flag != "1" else "Ribbon OUT"
                logging.info("Status da impressora - Papel: %s, Pausa: %s, Ribbon: %s", 
                            paper_status, pause_status, ribbon_status)
                printer_ready = (paper_status == "Papel OK" and
                                pause_status == "Pause (OFF)" and
                                ribbon_status == "Ribbon OK")
                if printer_ready:
                    write_modbus_register('OK')
                else:
                    write_modbus_register('NG')
                return printer_ready
        except Exception as ex:
            logging.error("Erro ao verificar status da impressora: %s", ex)
            return False

    def print_zpl(self, zpl_code: str) -> None:
        if not self.is_printer_ready():
            logging.warning("A impressora não está no estado correto para impressão. Impressão cancelada.")
            return
        try:
            with serial.Serial(self.serial_port, self.baud_rate, timeout=2) as printer:
                printer.write(zpl_code.encode())
            logging.info("Etiqueta enviada para impressão com sucesso.")
        except PermissionError as pe:
            logging.warning("Ignorando erro de permissão ao enviar ZPL: %s", pe)
        except Exception as ex:
            logging.info("Tentando acessar a porta serial... %s", ex)

    def send_test_print(self) -> None:
        """
        Envia uma impressão de teste utilizando uma string de ZPL pré-definida.
        """
        test_zpl = """^XA
                    ^PON
                    ^MD1^FS
                    ^PRD^FS
                    ^LH78,18^FS
                    ^CWM,E:MYRIADAS.FNT^FS
                    ^FO180,3160^A0N,60,60^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,760^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,852^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,952^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1046^A0N,50,44^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1134^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1340^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1818^A0N,50,32^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1880^A0N,50,32^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1972^A0N,50,48^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,2066^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1198^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1580^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1640^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1726^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO686,1196^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO520,1196^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO856,928^A0B,60,60^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO856,134^A0B,60,60^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,1612^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,1418^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,1276^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,1058^A0B,46,48^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,916^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,632^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,326^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1116,88^A0B,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1424^A0N,50,44^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO42,1484^A0N,50,44^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO106,1484^A0N,50,44^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO44,1258^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO734,1580^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO734,1726^A0N,50,50^FH^CT`^CC}}FD}FS}CT~}CC^
                    ^FO22,36^FR^GB810,3230,10,B,2^FS
                    ^FO32,814^FR^GB790,6,8,B,0^FS
                    ^FO32,726^FR^GB790,2,8,B,0^FS
                    ^FO32,910^FR^GB790,4,8,B,0^FS
                    ^FO32,1008^FR^GB790,4,8,B,0^FS
                    ^FO32,1104^FR^GB790,4,8,B,0^FS
                    ^FO32,1546^FR^GB790,4,8,B,0^FS
                    ^FO32,1936^FR^GB790,4,8,B,0^FS
                    ^FO32,2032^FR^GB790,4,8,B,0^FS
                    ^FO32,2126^FR^GB790,4,8,B,0^FS
                    ^FO32,1782^FR^GB790,4,8,B,0^FS
                    ^FO476,734^FR^GB2,80,8,B,0^FS
                    ^FO476,822^FR^GB2,88,8,B,0^FS
                    ^FO476,918^FR^GB2,90,8,B,0^FS
                    ^FO476,1112^FR^GB2,282,8,B,0^FS
                    ^FO476,1554^FR^GB0,228,8,B,0^FS
                    ^FO476,1790^FR^GB2,146,8,B,0^FS
                    ^FO476,1944^FR^GB2,88,8,B,0^FS
                    ^FO476,2040^FR^GB2,86,8,B,0^FS
                    ^FO32,1394^FR^GB790,4,8,B,0^FS
                    ^FO476,1016^FR^GB2,88,8,B,0^FS
                    ^FO476,1402^FR^GB2,144,8,B,0^FS
                    ^FO112,430^A0N,110,110^CT`^CC}}FD}FS}CT~}CC^
                    ^FO922,124^BY6^BCR,120,N,N,^FD^FS
                    ^FO1056,1702^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1056,1474^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1056,1300^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1056,1080^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1056,916^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1056,670^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1052,378^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO1056,172^A0B,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO856,1182^A0B,60,60^CT`^CC}}FD}FS}CT~}CC^
                    ^FO528,1196^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO162,568^A0N,80,80^CT`^CC}}FD}FS}CT~}CC^
                    ^FO720,760^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO642,852^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO692,950^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO712,1046^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO620,1134^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO632,1340^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO642,1818^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO642,1880^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO524,1972^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO524,2066^A0N,50,50^CT`^CC}}FD}FS}CT~}CC^
                    ^FO758,744^FR^XG13002577,2,2^FS
                    ^FO494,1484^A0N,50,32^CT`^CC}}FD}FS}CT~}CC^
                    ^FO564,1424^A0N,50,32^CT`^CC}}FD}FS}CT~}CC^
                    ^FO162,122^FR^XG13006430,2,2^FS
                    ^FO52,2352^FR^XG13008550,2,2^FS
                    ^FO864,1974^FR^XG13008590,2,2^FS
                    ^XZ
                    """
        try:
            config_path = resource_path("config.json")
            if os.path.exists(config_path):
                with open(config_path, "r", encoding="utf-8") as config_file:
                    config = json.load(config_file)
                self.novo_darkness = config.get("novo_darkness", self.novo_darkness)
                self.desired_move_x = config.get("desired_move_x", self.desired_move_x)
                self.desired_move_y = config.get("desired_move_y", self.desired_move_y)
            from label_convert import set_darkness, set_move_x_token, set_move_y_token
            zpl_with_darkness = set_darkness(test_zpl, self.novo_darkness)
            tokens = zpl_with_darkness.split('^')
            new_tokens = []
            for token in tokens:
                if token.startswith("LH"):
                    try:
                        new_token = set_move_x_token(token, self.desired_move_x)
                        new_token = set_move_y_token(new_token, self.desired_move_y)
                    except ValueError as ve:
                        logging.error("Erro ao aplicar move_x: %s", ve)
                        new_token = token
                    new_tokens.append(new_token)
                else:
                    new_tokens.append(token)
            zpl_converted = '^'.join(new_tokens)
            logging.info("Teste de impressão utilizando: novo_darkness=%s, desired_move_x=%s",
                        self.novo_darkness, self.desired_move_x)
            with serial.Serial(self.serial_port, self.baud_rate, timeout=5) as printer:
                printer.write(zpl_converted.encode())
                printer.flush()
                time.sleep(0.5)
            logging.info("Teste de impressão enviado para a impressora com sucesso.")
        except PermissionError as pe:
            logging.warning("Ignorando erro de permissão ao enviar o Teste de Impressão: %s", pe)
        except Exception as ex:
            logging.error("Erro ao enviar impressão de teste: %s", ex)

    def save_to_csv(self, serial_number: str, workorder_code_api1: str, model_suffix_api1: str, serial_no: str) -> None:
        """
        Salva as informações da impressão em um arquivo CSV.
        """
        try:
            with open(self.csv_file, mode='a', newline='', encoding='utf-8') as csvfile:
                writer = csv.writer(csvfile)
                writer.writerow([datetime.now().isoformat(), serial_number, workorder_code_api1, model_suffix_api1, serial_no])
            logging.info("Dados salvos em CSV com sucesso.")
        except Exception as ex:
            logging.error(f"Erro ao salvar dados em CSV: {ex}")

    @staticmethod
    def get_workorder_from_serial(serial: str) -> str:
        """
        Extrai a workorder a partir do serial (antes do hífen).
        """
        parts = serial.split('-')
        return parts[0] if parts else ""
    
    def get_total_labels(self, workorder_code: str) -> int:
        data = self.workorder_cache.get(workorder_code)
        if isinstance(data, list):
            return len(data)
        return 1

    def get_printed_count_for_workorder(self, workorder_code: str) -> int:
        return sum(1 for sn in self.printed_serials if self.get_workorder_from_serial(sn) == workorder_code)

    def get_remaining_labels(self, workorder_code: str) -> int:
        return self.get_total_labels(workorder_code) - self.get_printed_count_for_workorder(workorder_code)

    def _check_printing_status(self) -> bool:
        try:
            with serial.Serial(self.serial_port, self.baud_rate, timeout=2) as printer:
                printer.reset_input_buffer()
                logging.info("Enviando comando ~HS para verificar status da impressora.")
                printer.write(b"~HS")
                time.sleep(0.5)
                response_lines = []
                for _ in range(3):
                    line = printer.readline()
                    if line:
                        response_lines.append(line)
                if len(response_lines) < 2:
                    logging.error("Resposta insuficiente da impressora para verificação de status.")
                    return False
                decoded_line1 = response_lines[0].decode('ascii', errors='replace')
                if decoded_line1.startswith('\x02'):
                    decoded_line1 = decoded_line1[1:]
                if '\x03' in decoded_line1:
                    decoded_line1 = decoded_line1.split('\x03')[0]
                decoded_line1 = decoded_line1.strip()
                fields1 = decoded_line1.split(',')
                logging.info("Campos extraídos (Linha 1): %s", fields1)
                if len(fields1) < 5:
                    logging.error("Formato inesperado na resposta de status (String 1)!")
                    return False
                try:
                    num_formats = int(fields1[4])
                except ValueError:
                    num_formats = 0
                paper_flag = fields1[1] if len(fields1) > 1 else "0"
                pause_flag = fields1[2] if len(fields1) > 2 else "0"
                paper_status = "Papel OK" if paper_flag == "0" else "Falta de Papel"
                pause_status = "Pause (OFF)" if pause_flag == "0" else "Pause (ON)"
                decoded_line2 = response_lines[1].decode('ascii', errors='replace')
                if decoded_line2.startswith('\x02'):
                    decoded_line2 = decoded_line2[1:]
                if '\x03' in decoded_line2:
                    decoded_line2 = decoded_line2.split('\x03')[0]
                decoded_line2 = decoded_line2.strip()
                fields2 = decoded_line2.split(',')
                if len(fields2) < 8:
                    logging.error("Formato inesperado na resposta de status (String 2)!")
                    ribbon_flag = "0"
                    label_waiting = ""
                else:
                    ribbon_flag = fields2[3]
                    label_waiting = fields2[7]
                ribbon_status = "Ribbon OK" if ribbon_flag == "0" else "Ribbon OUT"
                logging.info("Status da impressora - Papel: %s, Pausa: %s, Ribbon: %s, Label Waiting: %s, Formatos no Buffer: %d",
                            paper_status, pause_status, ribbon_status, label_waiting, num_formats)
                if num_formats > 0 and paper_flag == "0" and pause_flag == "0" and ribbon_flag == "0":
                    return True
                else:
                    logging.warning("A impressão não foi confirmada: Status esperado [Papel OK, Pause (OFF), Ribbon OK] mas obtido - Papel: %s, Pausa: %s, Ribbon: %s",
                                    paper_status, pause_status, ribbon_status)
                    return False
        except Exception as e:
            logging.error(f"Erro ao consultar status da impressora: {e}")
            return False

    def consulta_workorder(self,
                           sequence_number: int,
                           serial_number: str,
                           workorder_code_api1: str,
                           model_suffix_api1: str,
                           allow_duplicate: bool = False) -> None:
        """
        Consulta a API de workorder e prepara o job para impressão.
        Em vez de enviar o ZPL diretamente, o job é enfileirado 
        para ser processado pelo worker de impressão.
        """
        workorder_code = workorder_code_api1 if workorder_code_api1 else self.get_workorder_from_serial(serial_number)
        if not workorder_code:
            logging.error("Erro ao extrair workorder do serial.")
            return
        
        if not allow_duplicate and serial_number in self.printed_serials:
            logging.warning(f"O serial {serial_number} já foi impresso anteriormente!")
            remaining = self.get_remaining_labels(workorder_code)
            logging.info(f"Total de etiquetas restantes para {workorder_code}: {remaining}")
            return

        # Use self.label_type_for_workorder read from config
        params_label = {
            "parameters.orgCode": self.org_code,
            "parameters.workOrderCode": workorder_code,
            "parameters.labelType": self.label_type_for_workorder,
        }

        if workorder_code in self.workorder_cache and self.get_total_labels(workorder_code) > 0:
            data = self.workorder_cache[workorder_code]
            logging.info(f"Usando dados do cache para workorder {workorder_code}...")
        else:
            data = self._get_json(self.api_workorder_url, params_label)
            if data is None:
                return
            self.workorder_cache[workorder_code] = data
            if isinstance(data, list):
                self.workorder_count[workorder_code] = len(data)
            logging.info(f"Dados obtidos da API para {workorder_code} e armazenados em cache.")
            logging.info(f"Total de etiquetas disponíveis: {self.get_total_labels(workorder_code)}")
            self._append_to_json_file(self.workorder_cache_file, {"workorder": workorder_code, "data": data})

        if isinstance(data, list) and len(data) >= sequence_number:
            registro = data[sequence_number - 1]
            logging.info(f"Registro {sequence_number} do WorkOrder: {registro}")
            zpl_set = registro.get("ZPL", "")
            if zpl_set:
                zpl_converted = process_zpl(
                    zpl_set,
                    scale=self.zpl_scale,
                    darkness=self.novo_darkness,
                    move_x=self.desired_move_x,
                    move_y=self.desired_move_y
                )
                logging.info("ZPL convertido para 600 DPI, enfileirando job de impressão...")
                job = {
                    "zpl": zpl_converted,
                    "registro": registro,
                    "serial_number": serial_number,
                    "workorder_code_api1": workorder_code_api1,
                    "model_suffix_api1": model_suffix_api1
                }
                self.print_queue.put(job)
            else:
                logging.warning("Código ZPL não encontrado no registro.")
        else:
            logging.warning(f"Não foi encontrado o registro {sequence_number} no WorkOrder.")

        logging.info(f"Total de etiquetas restantes para {workorder_code}: {self.get_remaining_labels(workorder_code)}")

    @staticmethod
    def get_sequence_number(serial: str) -> int:
        """
        Extrai e retorna o número sequencial presente no serial.
        Retorna 1 em caso de erro.
        """
        try:
            parts = serial.split('-')
            if len(parts) > 1:
                return int(parts[1])
        except Exception as ex:
            logging.warning(f"Falha ao extrair sequencial do serial {serial}: {ex}")
        return 1

    def validate_serial(self, serial_number: str) -> bool:
        """
        Valida se o serial está no formato esperado (ex.: 5BPR0559-00001).
        """
        pattern = r'^[A-Za-z0-9]+-\d+$'
        if re.match(pattern, serial_number):
            return True
        write_modbus_register('NG')
        logging.error("Formato de serial inválido!")
        return False

    def process_serial(self, serial_number: str, allow_duplicate: bool = False) -> None:
        """
        Processa o serial: consulta as APIs, atualiza caches e enfileira o job de impressão.
        """
        if not self.validate_serial(serial_number):
            return
        if allow_duplicate:
            if serial_number in self.printed_serials:
                logging.info("Reimpressão manual solicitada para o serial: %s", serial_number)
            else:
                logging.info("Impressão solicitada para o serial: %s", serial_number)
        workorder_from_serial = self.get_workorder_from_serial(serial_number)
        sequence_number = self.get_sequence_number(serial_number)
        
        if sequence_number == 1 or workorder_from_serial not in self.api1_cache:
            logging.info("Consultando API para dados do serial...")
            workorder_code_api1, model_suffix_api1 = self.consulta_api(serial_number)
            self.api1_cache[workorder_from_serial] = (workorder_code_api1, model_suffix_api1)
            self._append_to_json_file(self.api1_cache_file, {
                "workorder": workorder_from_serial,
                "WorkOrderCode": workorder_code_api1,
                "ModelSuffix": model_suffix_api1
            })
        else:
            logging.info("WorkOrder encontrada no cache. Utilizando dados em cache para a consulta.")
            workorder_code_api1, model_suffix_api1 = self.api1_cache[workorder_from_serial]
        
        self.consulta_workorder(sequence_number, serial_number, workorder_code_api1, model_suffix_api1, allow_duplicate=allow_duplicate)

    def read_barcode_from_scanner(self) -> str:
        """
        Lê o código de barras do scanner.
        """
        try:
            config_path = resource_path("config.json")
            if os.path.exists(config_path):
                with open(config_path, "r", encoding="utf-8") as f:
                    config = json.load(f)
                    new_scanner_port = config.get("scanner_port", self.scanner_port)
                    if new_scanner_port != self.scanner_port:
                        logging.info("Atualizando a porta do scanner de %s para %s...",
                                     self.scanner_port, new_scanner_port)
                        self.scanner_port = new_scanner_port
            
            with serial.Serial(self.scanner_port, self.scanner_baud_rate, timeout=0.3) as scanner:
                logging.info("Aguardando leitura do scanner na porta %s...", self.scanner_port)
                barcode = scanner.readline().decode().strip()
                logging.info("Código de barras lido: %s", barcode)
                return barcode
        except Exception as exc:
            logging.error("Erro ao ler do scanner na porta %s: %s", self.scanner_port, exc)
            return ""

def main() -> None:
    """
    Função principal que instancia o LabelManager e inicia o loop de leitura do scanner.
    """
    logging.basicConfig(level=logging.DEBUG,
                        format='%(asctime)s - %(levelname)s - %(message)s')
    label_manager = LabelManager()
    logging.info("Iniciando a leitura contínua do scanner na porta %s...", label_manager.scanner_port)
    
    try:
        while True:
            serial_number = label_manager.read_barcode_from_scanner()
            if serial_number:
                logging.info("Código de barras recebido: %s", serial_number)
                label_manager.process_serial(serial_number)
    except KeyboardInterrupt:
        logging.info("Programa encerrado via interrupção do usuário.")
    except Exception as e:
        logging.error(f"Erro inesperado: {e}")

if __name__ == "__main__":
    main()